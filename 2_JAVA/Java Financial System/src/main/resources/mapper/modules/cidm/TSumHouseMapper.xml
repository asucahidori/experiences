<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gatz.discovery.modules.cidm.dao.TSumHouseMapper" >
  <resultMap id="BaseResultMap" type="com.gatz.discovery.modules.cidm.model.TSumHouse" >
    <id column="area_id" property="areaId" jdbcType="BIGINT" />
    <result column="date_id" property="dateId" jdbcType="TIMESTAMP" />
    <result column="area_type" property="areaType" jdbcType="SMALLINT" />
    <result column="gb_code" property="gbCode" jdbcType="VARCHAR" />
    <result column="square_area" property="squareArea" jdbcType="BIGINT" />
    <result column="office_bld_num" property="officeBldNum" jdbcType="BIGINT" />
    <result column="office_park_num" property="officeParkNum" jdbcType="BIGINT" />
    <result column="office_area" property="officeArea" jdbcType="BIGINT" />
    <result column="house_bld_num" property="houseBldNum" jdbcType="BIGINT" />
    <result column="house_park_num" property="houseParkNum" jdbcType="BIGINT" />
    <result column="house_area" property="houseArea" jdbcType="BIGINT" />
    <result column="households" property="households" jdbcType="BIGINT" />
    <result column="rental_number" property="rentalNumber" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    area_id, date_id, area_type, gb_code, square_area, office_bld_num, office_park_num, 
    office_area, house_bld_num, house_park_num, house_area, households, rental_number, 
    status, version, create_user, create_time, update_user, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gatz.discovery.modules.cidm.model.TSumHouseExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_sum_house
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_sum_house
    where area_id = #{areaId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_sum_house
    where area_id = #{areaId,jdbcType=TIMESTAMP}
  </delete>
  <delete id="deleteByExample" parameterType="com.gatz.discovery.modules.cidm.model.TSumHouseExample" >
    delete from t_sum_house
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gatz.discovery.modules.cidm.model.TSumHouse" >
    insert into t_sum_house (area_id, date_id, area_type, 
      gb_code, square_area, office_bld_num, 
      office_park_num, office_area, house_bld_num, 
      house_park_num, house_area, households, 
      rental_number, status, version, 
      create_user, create_time, update_user, 
      update_time)
    values (#{areaId,jdbcType=BIGINT}, #{dateId,jdbcType=TIMESTAMP}, #{areaType,jdbcType=SMALLINT}, 
      #{gbCode,jdbcType=VARCHAR}, #{squareArea,jdbcType=BIGINT}, #{officeBldNum,jdbcType=BIGINT}, 
      #{officeParkNum,jdbcType=BIGINT}, #{officeArea,jdbcType=BIGINT}, #{houseBldNum,jdbcType=BIGINT}, 
      #{houseParkNum,jdbcType=BIGINT}, #{houseArea,jdbcType=BIGINT}, #{households,jdbcType=BIGINT}, 
      #{rentalNumber,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, #{version,jdbcType=INTEGER}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.gatz.discovery.modules.cidm.model.TSumHouse" >
    insert into t_sum_house
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="areaId != null" >
        area_id,
      </if>
      <if test="dateId != null" >
        date_id,
      </if>
      <if test="areaType != null" >
        area_type,
      </if>
      <if test="gbCode != null" >
        gb_code,
      </if>
      <if test="squareArea != null" >
        square_area,
      </if>
      <if test="officeBldNum != null" >
        office_bld_num,
      </if>
      <if test="officeParkNum != null" >
        office_park_num,
      </if>
      <if test="officeArea != null" >
        office_area,
      </if>
      <if test="houseBldNum != null" >
        house_bld_num,
      </if>
      <if test="houseParkNum != null" >
        house_park_num,
      </if>
      <if test="houseArea != null" >
        house_area,
      </if>
      <if test="households != null" >
        households,
      </if>
      <if test="rentalNumber != null" >
        rental_number,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="areaId != null" >
        #{areaId,jdbcType=BIGINT},
      </if>
      <if test="dateId != null" >
        #{dateId,jdbcType=TIMESTAMP},
      </if>
      <if test="areaType != null" >
        #{areaType,jdbcType=SMALLINT},
      </if>
      <if test="gbCode != null" >
        #{gbCode,jdbcType=VARCHAR},
      </if>
      <if test="squareArea != null" >
        #{squareArea,jdbcType=BIGINT},
      </if>
      <if test="officeBldNum != null" >
        #{officeBldNum,jdbcType=BIGINT},
      </if>
      <if test="officeParkNum != null" >
        #{officeParkNum,jdbcType=BIGINT},
      </if>
      <if test="officeArea != null" >
        #{officeArea,jdbcType=BIGINT},
      </if>
      <if test="houseBldNum != null" >
        #{houseBldNum,jdbcType=BIGINT},
      </if>
      <if test="houseParkNum != null" >
        #{houseParkNum,jdbcType=BIGINT},
      </if>
      <if test="houseArea != null" >
        #{houseArea,jdbcType=BIGINT},
      </if>
      <if test="households != null" >
        #{households,jdbcType=BIGINT},
      </if>
      <if test="rentalNumber != null" >
        #{rentalNumber,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gatz.discovery.modules.cidm.model.TSumHouseExample" resultType="java.lang.Integer" >
    select count(*) from t_sum_house
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_sum_house
    <set >
      <if test="record.areaId != null" >
        area_id = #{record.areaId,jdbcType=BIGINT},
      </if>
      <if test="record.dateId != null" >
        date_id = #{record.dateId,jdbcType=TIMESTAMP},
      </if>
      <if test="record.areaType != null" >
        area_type = #{record.areaType,jdbcType=SMALLINT},
      </if>
      <if test="record.gbCode != null" >
        gb_code = #{record.gbCode,jdbcType=VARCHAR},
      </if>
      <if test="record.squareArea != null" >
        square_area = #{record.squareArea,jdbcType=BIGINT},
      </if>
      <if test="record.officeBldNum != null" >
        office_bld_num = #{record.officeBldNum,jdbcType=BIGINT},
      </if>
      <if test="record.officeParkNum != null" >
        office_park_num = #{record.officeParkNum,jdbcType=BIGINT},
      </if>
      <if test="record.officeArea != null" >
        office_area = #{record.officeArea,jdbcType=BIGINT},
      </if>
      <if test="record.houseBldNum != null" >
        house_bld_num = #{record.houseBldNum,jdbcType=BIGINT},
      </if>
      <if test="record.houseParkNum != null" >
        house_park_num = #{record.houseParkNum,jdbcType=BIGINT},
      </if>
      <if test="record.houseArea != null" >
        house_area = #{record.houseArea,jdbcType=BIGINT},
      </if>
      <if test="record.households != null" >
        households = #{record.households,jdbcType=BIGINT},
      </if>
      <if test="record.rentalNumber != null" >
        rental_number = #{record.rentalNumber,jdbcType=BIGINT},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_sum_house
    set area_id = #{record.areaId,jdbcType=BIGINT},
      date_id = #{record.dateId,jdbcType=TIMESTAMP},
      area_type = #{record.areaType,jdbcType=SMALLINT},
      gb_code = #{record.gbCode,jdbcType=VARCHAR},
      square_area = #{record.squareArea,jdbcType=BIGINT},
      office_bld_num = #{record.officeBldNum,jdbcType=BIGINT},
      office_park_num = #{record.officeParkNum,jdbcType=BIGINT},
      office_area = #{record.officeArea,jdbcType=BIGINT},
      house_bld_num = #{record.houseBldNum,jdbcType=BIGINT},
      house_park_num = #{record.houseParkNum,jdbcType=BIGINT},
      house_area = #{record.houseArea,jdbcType=BIGINT},
      households = #{record.households,jdbcType=BIGINT},
      rental_number = #{record.rentalNumber,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gatz.discovery.modules.cidm.model.TSumHouse" >
    update t_sum_house
    <set >
      <if test="dateId != null" >
        date_id = #{dateId,jdbcType=TIMESTAMP},
      </if>
      <if test="areaType != null" >
        area_type = #{areaType,jdbcType=SMALLINT},
      </if>
      <if test="gbCode != null" >
        gb_code = #{gbCode,jdbcType=VARCHAR},
      </if>
      <if test="squareArea != null" >
        square_area = #{squareArea,jdbcType=BIGINT},
      </if>
      <if test="officeBldNum != null" >
        office_bld_num = #{officeBldNum,jdbcType=BIGINT},
      </if>
      <if test="officeParkNum != null" >
        office_park_num = #{officeParkNum,jdbcType=BIGINT},
      </if>
      <if test="officeArea != null" >
        office_area = #{officeArea,jdbcType=BIGINT},
      </if>
      <if test="houseBldNum != null" >
        house_bld_num = #{houseBldNum,jdbcType=BIGINT},
      </if>
      <if test="houseParkNum != null" >
        house_park_num = #{houseParkNum,jdbcType=BIGINT},
      </if>
      <if test="houseArea != null" >
        house_area = #{houseArea,jdbcType=BIGINT},
      </if>
      <if test="households != null" >
        households = #{households,jdbcType=BIGINT},
      </if>
      <if test="rentalNumber != null" >
        rental_number = #{rentalNumber,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where area_id = #{areaId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gatz.discovery.modules.cidm.model.TSumHouse" >
    update t_sum_house
    set date_id = #{dateId,jdbcType=TIMESTAMP},
      area_type = #{areaType,jdbcType=SMALLINT},
      gb_code = #{gbCode,jdbcType=VARCHAR},
      square_area = #{squareArea,jdbcType=BIGINT},
      office_bld_num = #{officeBldNum,jdbcType=BIGINT},
      office_park_num = #{officeParkNum,jdbcType=BIGINT},
      office_area = #{officeArea,jdbcType=BIGINT},
      house_bld_num = #{houseBldNum,jdbcType=BIGINT},
      house_park_num = #{houseParkNum,jdbcType=BIGINT},
      house_area = #{houseArea,jdbcType=BIGINT},
      households = #{households,jdbcType=BIGINT},
      rental_number = #{rentalNumber,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where area_id = #{areaId,jdbcType=BIGINT}
  </update>
  
  <select id="getAreaHomeProperty" parameterType="java.lang.String" resultType="java.util.HashMap">
	  SELECT th.rental_number AS zuzhu,(th.households-th.rental_number) AS zizhu FROM 
	  (SELECT * FROM (SELECT t.area_id,t.area_type,t.date_id,t.households,t.rental_number,t.status FROM t_sum_house t ORDER BY t.date_id DESC) temp GROUP BY temp.area_id,temp.area_type ORDER BY temp.date_id DESC) th
 	  WHERE th.area_type='6' AND th.area_id=#{areacode} and th.status=0
  </select>
  <select id="getBuildingHomeProperty" parameterType="java.lang.String" resultType="java.util.HashMap">
	  SELECT th.rental_number AS zuzhu,(th.households-th.rental_number) AS zizhu FROM 
	  (SELECT * FROM (SELECT t.area_id,t.area_type,t.date_id,t.households,t.rental_number FROM t_sum_house t ORDER BY t.date_id DESC) temp GROUP BY temp.area_id,temp.area_type ORDER BY temp.date_id DESC) th 
	  WHERE th.area_type='7' AND th.area_id=#{areacode}
  </select>
  <select id="searchSumHouse" parameterType="java.lang.String" resultType="java.util.HashMap">
  SELECT 
  <include refid="Base_Column_List" />
  from t_sum_house 
  where 
  area_type = #{areaType}
  and area_id = #{areaId}
  and status=0
  ORDER BY date_id desc LIMIT 1
  </select>
  <!-- 查询小区出租比例 -->
  <select id="queryTinyVillageRentalRatio" parameterType="java.util.HashMap" resultType="java.util.HashMap">
 	SELECT
		ROUND(IFNULL((s.rental_number / households),0),2)*100 rentRradio
	FROM
		t_sum_house s
	WHERE
		s.area_id = #{id} 
	AND s.area_type = #{areaType} 
	and s.status=0
	ORDER BY 
		s.date_id DESC
	LIMIT 1
  </select>
  
</mapper>