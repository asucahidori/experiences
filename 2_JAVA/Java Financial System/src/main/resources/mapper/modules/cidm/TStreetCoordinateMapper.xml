<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gatz.discovery.modules.cidm.dao.TStreetCoordinateMapper">
	<resultMap id="BaseResultMap"
		type="com.gatz.discovery.modules.cidm.model.TStreetCoordinate">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="name" property="name" jdbcType="VARCHAR" />
		<result column="province" property="province" jdbcType="VARCHAR" />
		<result column="city" property="city" jdbcType="VARCHAR" />
		<result column="district" property="district" jdbcType="VARCHAR" />
		<result column="street" property="street" jdbcType="VARCHAR" />
		<result column="streetnumber" property="streetnumber" jdbcType="VARCHAR" />
		<result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
		<result column="update_user" property="updateUser" jdbcType="VARCHAR" />
		<result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
		<result column="create_user" property="createUser" jdbcType="VARCHAR" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBs"
		type="com.gatz.discovery.modules.cidm.model.TStreetCoordinateWithBLOBs"
		extends="BaseResultMap">
		<result column="coordinates" property="coordinates" jdbcType="LONGVARBINARY" />
		<result column="coordinates" property="coordinates"
			jdbcType="LONGVARBINARY" />
	</resultMap>
	<resultMap id="ResultMapWithBLOBsGaode"
		type="com.gatz.discovery.modules.cidm.model.CoordinatesVo">
		<result column="street" property="street" jdbcType="VARCHAR" />
		<result column="gaode_coordinates" property="gaodeCoordinates"
			jdbcType="LONGVARBINARY" />
			<result column="gaode_coordinates" property="gaodeCoordinates"
			jdbcType="LONGVARBINARY" />
	</resultMap>
	<sql id="Example_Where_Clause">
		<where>
			<foreach collection="oredCriteria" item="criteria" separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Update_By_Example_Where_Clause">
		<where>
			<foreach collection="example.oredCriteria" item="criteria"
				separator="or">
				<if test="criteria.valid">
					<trim prefix="(" suffix=")" prefixOverrides="and">
						<foreach collection="criteria.criteria" item="criterion">
							<choose>
								<when test="criterion.noValue">
									and ${criterion.condition}
								</when>
								<when test="criterion.singleValue">
									and ${criterion.condition} #{criterion.value}
								</when>
								<when test="criterion.betweenValue">
									and ${criterion.condition} #{criterion.value} and
									#{criterion.secondValue}
								</when>
								<when test="criterion.listValue">
									and ${criterion.condition}
									<foreach collection="criterion.value" item="listItem"
										open="(" close=")" separator=",">
										#{listItem}
									</foreach>
								</when>
							</choose>
						</foreach>
					</trim>
				</if>
			</foreach>
		</where>
	</sql>
	<sql id="Base_Column_List">
		id, name, province, city, district, street, streetnumber, create_time,
		update_user,
		update_time, create_user
	</sql>
	<sql id="Blob_Column_List">
		coordinates, gaode_coordinates
	</sql>
	<select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs"
		parameterType="com.gatz.discovery.modules.cidm.model.TStreetCoordinateExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from t_street_coordinate
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByExample" resultMap="BaseResultMap"
		parameterType="com.gatz.discovery.modules.cidm.model.TStreetCoordinateExample">
		select
		<if test="distinct">
			distinct
		</if>
		<include refid="Base_Column_List" />
		from t_street_coordinate
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
		<if test="orderByClause != null">
			order by ${orderByClause}
		</if>
	</select>
	<select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from t_street_coordinate
		where id = #{id,jdbcType=INTEGER}
	</select>
	<select id="selectByStreetId" resultMap="ResultMapWithBLOBs"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		,
		<include refid="Blob_Column_List" />
		from t_street_coordinate
		where street = #{streetId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from t_street_coordinate
		where id = #{id,jdbcType=INTEGER}
	</delete>
	<delete id="deleteByExample"
		parameterType="com.gatz.discovery.modules.cidm.model.TStreetCoordinateExample">
		delete from t_street_coordinate
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</delete>
	<insert id="insert"
		parameterType="com.gatz.discovery.modules.cidm.model.TStreetCoordinateWithBLOBs">
		insert into t_street_coordinate (id, name, province,
		city, district, street,
		streetnumber, create_time, update_user,
		update_time, create_user, coordinates,
		gaode_coordinates)
		values (#{id,jdbcType=INTEGER}, #{name,jdbcType=VARCHAR},
		#{province,jdbcType=VARCHAR},
		#{city,jdbcType=VARCHAR}, #{district,jdbcType=VARCHAR}, #{street,jdbcType=VARCHAR},
		#{streetnumber,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP},
		#{updateUser,jdbcType=VARCHAR},
		#{updateTime,jdbcType=TIMESTAMP}, #{createUser,jdbcType=VARCHAR},
		#{coordinates,jdbcType=LONGVARBINARY},
		#{gaodeCoordinates,jdbcType=LONGVARBINARY})
	</insert>
	<insert id="insertSelective"
		parameterType="com.gatz.discovery.modules.cidm.model.TStreetCoordinateWithBLOBs">
		insert into t_street_coordinate
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="id != null">
				id,
			</if>
			<if test="name != null">
				name,
			</if>
			<if test="province != null">
				province,
			</if>
			<if test="city != null">
				city,
			</if>
			<if test="district != null">
				district,
			</if>
			<if test="street != null">
				street,
			</if>
			<if test="streetnumber != null">
				streetnumber,
			</if>
			<if test="createTime != null">
				create_time,
			</if>
			<if test="updateUser != null">
				update_user,
			</if>
			<if test="updateTime != null">
				update_time,
			</if>
			<if test="createUser != null">
				create_user,
			</if>
			<if test="coordinates != null">
				coordinates,
			</if>
			<if test="gaodeCoordinates != null">
				gaode_coordinates,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="id != null">
				#{id,jdbcType=INTEGER},
			</if>
			<if test="name != null">
				#{name,jdbcType=VARCHAR},
			</if>
			<if test="province != null">
				#{province,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				#{city,jdbcType=VARCHAR},
			</if>
			<if test="district != null">
				#{district,jdbcType=VARCHAR},
			</if>
			<if test="street != null">
				#{street,jdbcType=VARCHAR},
			</if>
			<if test="streetnumber != null">
				#{streetnumber,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				#{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUser != null">
				#{updateUser,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				#{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUser != null">
				#{createUser,jdbcType=VARCHAR},
			</if>
			<if test="coordinates != null">
				#{coordinates,jdbcType=LONGVARBINARY},
			</if>
			<if test="gaodeCoordinates != null">
				#{gaodeCoordinates,jdbcType=LONGVARBINARY},
			</if>
		</trim>
	</insert>
	<select id="countByExample"
		parameterType="com.gatz.discovery.modules.cidm.model.TStreetCoordinateExample"
		resultType="java.lang.Integer">
		select count(*) from t_street_coordinate
		<if test="_parameter != null">
			<include refid="Example_Where_Clause" />
		</if>
	</select>
	<update id="updateByExampleSelective" parameterType="map">
		update t_street_coordinate
		<set>
			<if test="record.id != null">
				id = #{record.id,jdbcType=INTEGER},
			</if>
			<if test="record.name != null">
				name = #{record.name,jdbcType=VARCHAR},
			</if>
			<if test="record.province != null">
				province = #{record.province,jdbcType=VARCHAR},
			</if>
			<if test="record.city != null">
				city = #{record.city,jdbcType=VARCHAR},
			</if>
			<if test="record.district != null">
				district = #{record.district,jdbcType=VARCHAR},
			</if>
			<if test="record.street != null">
				street = #{record.street,jdbcType=VARCHAR},
			</if>
			<if test="record.streetnumber != null">
				streetnumber = #{record.streetnumber,jdbcType=VARCHAR},
			</if>
			<if test="record.createTime != null">
				create_time = #{record.createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.updateUser != null">
				update_user = #{record.updateUser,jdbcType=VARCHAR},
			</if>
			<if test="record.updateTime != null">
				update_time = #{record.updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="record.createUser != null">
				create_user = #{record.createUser,jdbcType=VARCHAR},
			</if>
			<if test="record.coordinates != null">
				coordinates = #{record.coordinates,jdbcType=LONGVARBINARY},
			</if>
			<if test="record.gaodeCoordinates != null">
				gaode_coordinates = #{record.gaodeCoordinates,jdbcType=LONGVARBINARY},
			</if>
		</set>
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExampleWithBLOBs" parameterType="map">
		update t_street_coordinate
		set id = #{record.id,jdbcType=INTEGER},
		name = #{record.name,jdbcType=VARCHAR},
		province = #{record.province,jdbcType=VARCHAR},
		city = #{record.city,jdbcType=VARCHAR},
		district = #{record.district,jdbcType=VARCHAR},
		street = #{record.street,jdbcType=VARCHAR},
		streetnumber = #{record.streetnumber,jdbcType=VARCHAR},
		create_time = #{record.createTime,jdbcType=TIMESTAMP},
		update_user = #{record.updateUser,jdbcType=VARCHAR},
		update_time = #{record.updateTime,jdbcType=TIMESTAMP},
		create_user = #{record.createUser,jdbcType=VARCHAR},
		coordinates = #{record.coordinates,jdbcType=LONGVARBINARY},
		gaode_coordinates = #{record.gaodeCoordinates,jdbcType=LONGVARBINARY}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByExample" parameterType="map">
		update t_street_coordinate
		set id = #{record.id,jdbcType=INTEGER},
		name = #{record.name,jdbcType=VARCHAR},
		province = #{record.province,jdbcType=VARCHAR},
		city = #{record.city,jdbcType=VARCHAR},
		district = #{record.district,jdbcType=VARCHAR},
		street = #{record.street,jdbcType=VARCHAR},
		streetnumber = #{record.streetnumber,jdbcType=VARCHAR},
		create_time = #{record.createTime,jdbcType=TIMESTAMP},
		update_user = #{record.updateUser,jdbcType=VARCHAR},
		update_time = #{record.updateTime,jdbcType=TIMESTAMP},
		create_user = #{record.createUser,jdbcType=VARCHAR}
		<if test="_parameter != null">
			<include refid="Update_By_Example_Where_Clause" />
		</if>
	</update>
	<update id="updateByPrimaryKeySelective"
		parameterType="com.gatz.discovery.modules.cidm.model.TStreetCoordinateWithBLOBs">
		update t_street_coordinate
		<set>
			<if test="name != null">
				name = #{name,jdbcType=VARCHAR},
			</if>
			<if test="province != null">
				province = #{province,jdbcType=VARCHAR},
			</if>
			<if test="city != null">
				city = #{city,jdbcType=VARCHAR},
			</if>
			<if test="district != null">
				district = #{district,jdbcType=VARCHAR},
			</if>
			<if test="street != null">
				street = #{street,jdbcType=VARCHAR},
			</if>
			<if test="streetnumber != null">
				streetnumber = #{streetnumber,jdbcType=VARCHAR},
			</if>
			<if test="createTime != null">
				create_time = #{createTime,jdbcType=TIMESTAMP},
			</if>
			<if test="updateUser != null">
				update_user = #{updateUser,jdbcType=VARCHAR},
			</if>
			<if test="updateTime != null">
				update_time = #{updateTime,jdbcType=TIMESTAMP},
			</if>
			<if test="createUser != null">
				create_user = #{createUser,jdbcType=VARCHAR},
			</if>
			<if test="coordinates != null">
				coordinates = #{coordinates,jdbcType=LONGVARBINARY},
			</if>
			<if test="gaodeCoordinates != null">
				gaode_coordinates = #{gaodeCoordinates,jdbcType=LONGVARBINARY},
			</if>
		</set>
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKeyWithBLOBs"
		parameterType="com.gatz.discovery.modules.cidm.model.TStreetCoordinateWithBLOBs">
		update t_street_coordinate
		set name = #{name,jdbcType=VARCHAR},
		province = #{province,jdbcType=VARCHAR},
		city = #{city,jdbcType=VARCHAR},
		district = #{district,jdbcType=VARCHAR},
		street = #{street,jdbcType=VARCHAR},
		streetnumber = #{streetnumber,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_user = #{updateUser,jdbcType=VARCHAR},
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		create_user = #{createUser,jdbcType=VARCHAR},
		coordinates = #{coordinates,jdbcType=LONGVARBINARY},
		gaode_coordinates = #{gaodeCoordinates,jdbcType=LONGVARBINARY}
		where id = #{id,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey"
		parameterType="com.gatz.discovery.modules.cidm.model.TStreetCoordinate">
		update t_street_coordinate
		set name = #{name,jdbcType=VARCHAR},
		province = #{province,jdbcType=VARCHAR},
		city = #{city,jdbcType=VARCHAR},
		district = #{district,jdbcType=VARCHAR},
		street = #{street,jdbcType=VARCHAR},
		streetnumber = #{streetnumber,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP},
		update_user = #{updateUser,jdbcType=VARCHAR},
		update_time = #{updateTime,jdbcType=TIMESTAMP},
		create_user = #{createUser,jdbcType=VARCHAR}
		where id = #{id,jdbcType=INTEGER}
	</update>

	<!-- 查询 列表 -->
	<select id="selectMapWithBLOBsGaode" parameterType="java.util.Map"
		resultMap="ResultMapWithBLOBsGaode">
		SELECT t.`street`,t.`gaode_coordinates`,t.`coordinates` FROM `t_street_coordinate` t
		<where>
			<if test="streetId != null">
				and t.`street` = #{streetId}
			</if>
		</where>
		<if test="from != null  and  rows != null ">
			limit #{ from},#{ rows}
		</if>
	</select>
</mapper>
