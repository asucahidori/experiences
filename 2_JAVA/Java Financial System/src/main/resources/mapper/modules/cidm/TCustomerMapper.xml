<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gatz.discovery.modules.cidm.dao.TCustomerMapper" >
  <resultMap id="BaseResultMap" type="com.gatz.discovery.modules.cidm.model.TCustomer" >
    <id column="customer_id" property="customerId" jdbcType="BIGINT" />
    <result column="short_name" property="shortName" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="customer_type" property="customerType" jdbcType="SMALLINT" />
    <result column="sex" property="sex" jdbcType="BIT" />
    <result column="birthday" property="birthday" jdbcType="TIMESTAMP" />
    <result column="mobilephone" property="mobilephone" jdbcType="VARCHAR" />
    <result column="telephone" property="telephone" jdbcType="VARCHAR" />
    <result column="mail" property="mail" jdbcType="VARCHAR" />
    <result column="house_id" property="houseId" jdbcType="BIGINT" />
    <result column="building_id" property="buildingId" jdbcType="BIGINT" />
    <result column="tinyvillage_Id" property="tinyvillageId" jdbcType="BIGINT" />
    <result column="village_id" property="villageId" jdbcType="BIGINT" />
    <result column="town_id" property="townId" jdbcType="BIGINT" />
    <result column="county_id" property="countyId" jdbcType="BIGINT" />
    <result column="city_id" property="cityId" jdbcType="BIGINT" />
    <result column="province_id" property="provinceId" jdbcType="BIGINT" />
    <result column="house_type" property="houseType" jdbcType="INTEGER" />
    <result column="store_id" property="storeId" jdbcType="BIGINT" />
    <result column="job" property="job" jdbcType="VARCHAR" />
    <result column="trade" property="trade" jdbcType="VARCHAR" />
    <result column="marital_status" property="maritalStatus" jdbcType="INTEGER" />
    <result column="children_status" property="childrenStatus" jdbcType="VARCHAR" />
    <result column="house_hold" property="houseHold" jdbcType="INTEGER" />
    <result column="member_flag" property="memberFlag" jdbcType="SMALLINT" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="date_id" property="dateId" jdbcType="VARCHAR" />
    <result column="population" property="population" jdbcType="BIGINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    customer_id, short_name, name, customer_type, sex, birthday, mobilephone, telephone, 
    mail, house_id, building_id, tinyvillage_Id, village_id, town_id, county_id, city_id, 
    province_id, house_type, store_id, job, trade, marital_status, children_status, house_hold, 
    member_flag, status, version, create_user, create_time, update_user, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gatz.discovery.modules.cidm.model.TCustomerExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_customer
    where customer_id = #{customerId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_customer
    where customer_id = #{customerId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gatz.discovery.modules.cidm.model.TCustomerExample" >
    delete from t_customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gatz.discovery.modules.cidm.model.TCustomer" >
    insert into t_customer (customer_id, short_name, name, 
      customer_type, sex, birthday, 
      mobilephone, telephone, mail, 
      house_id, building_id, tinyvillage_Id, 
      village_id, town_id, county_id, 
      city_id, province_id, house_type, 
      store_id, job, trade, 
      marital_status, children_status, house_hold, 
      member_flag, status, version, 
      create_user, create_time, update_user, 
      update_time)
    values (#{customerId,jdbcType=BIGINT}, #{shortName,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{customerType,jdbcType=SMALLINT}, #{sex,jdbcType=BIT}, #{birthday,jdbcType=TIMESTAMP}, 
      #{mobilephone,jdbcType=VARCHAR}, #{telephone,jdbcType=VARCHAR}, #{mail,jdbcType=VARCHAR}, 
      #{houseId,jdbcType=BIGINT}, #{buildingId,jdbcType=BIGINT}, #{tinyvillageId,jdbcType=BIGINT}, 
      #{villageId,jdbcType=BIGINT}, #{townId,jdbcType=BIGINT}, #{countyId,jdbcType=BIGINT}, 
      #{cityId,jdbcType=BIGINT}, #{provinceId,jdbcType=BIGINT}, #{houseType,jdbcType=INTEGER}, 
      #{storeId,jdbcType=BIGINT}, #{job,jdbcType=VARCHAR}, #{trade,jdbcType=VARCHAR}, 
      #{maritalStatus,jdbcType=INTEGER}, #{childrenStatus,jdbcType=VARCHAR}, #{houseHold,jdbcType=INTEGER}, 
      #{memberFlag,jdbcType=SMALLINT}, #{status,jdbcType=INTEGER}, #{version,jdbcType=INTEGER}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.gatz.discovery.modules.cidm.model.TCustomer" >
    insert into t_customer
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="shortName != null" >
        short_name,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="customerType != null" >
        customer_type,
      </if>
      <if test="sex != null" >
        sex,
      </if>
      <if test="birthday != null" >
        birthday,
      </if>
      <if test="mobilephone != null" >
        mobilephone,
      </if>
      <if test="telephone != null" >
        telephone,
      </if>
      <if test="mail != null" >
        mail,
      </if>
      <if test="houseId != null" >
        house_id,
      </if>
      <if test="buildingId != null" >
        building_id,
      </if>
      <if test="tinyvillageId != null" >
        tinyvillage_Id,
      </if>
      <if test="villageId != null" >
        village_id,
      </if>
      <if test="townId != null" >
        town_id,
      </if>
      <if test="countyId != null" >
        county_id,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
      <if test="provinceId != null" >
        province_id,
      </if>
      <if test="houseType != null" >
        house_type,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="job != null" >
        job,
      </if>
      <if test="trade != null" >
        trade,
      </if>
      <if test="maritalStatus != null" >
        marital_status,
      </if>
      <if test="childrenStatus != null" >
        children_status,
      </if>
      <if test="houseHold != null" >
        house_hold,
      </if>
      <if test="memberFlag != null" >
        member_flag,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="customerId != null" >
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="shortName != null" >
        #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="customerType != null" >
        #{customerType,jdbcType=SMALLINT},
      </if>
      <if test="sex != null" >
        #{sex,jdbcType=BIT},
      </if>
      <if test="birthday != null" >
        #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="mobilephone != null" >
        #{mobilephone,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="mail != null" >
        #{mail,jdbcType=VARCHAR},
      </if>
      <if test="houseId != null" >
        #{houseId,jdbcType=BIGINT},
      </if>
      <if test="buildingId != null" >
        #{buildingId,jdbcType=BIGINT},
      </if>
      <if test="tinyvillageId != null" >
        #{tinyvillageId,jdbcType=BIGINT},
      </if>
      <if test="villageId != null" >
        #{villageId,jdbcType=BIGINT},
      </if>
      <if test="townId != null" >
        #{townId,jdbcType=BIGINT},
      </if>
      <if test="countyId != null" >
        #{countyId,jdbcType=BIGINT},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=BIGINT},
      </if>
      <if test="provinceId != null" >
        #{provinceId,jdbcType=BIGINT},
      </if>
      <if test="houseType != null" >
        #{houseType,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=BIGINT},
      </if>
      <if test="job != null" >
        #{job,jdbcType=VARCHAR},
      </if>
      <if test="trade != null" >
        #{trade,jdbcType=VARCHAR},
      </if>
      <if test="maritalStatus != null" >
        #{maritalStatus,jdbcType=INTEGER},
      </if>
      <if test="childrenStatus != null" >
        #{childrenStatus,jdbcType=VARCHAR},
      </if>
      <if test="houseHold != null" >
        #{houseHold,jdbcType=INTEGER},
      </if>
      <if test="memberFlag != null" >
        #{memberFlag,jdbcType=SMALLINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gatz.discovery.modules.cidm.model.TCustomerExample" resultType="java.lang.Integer" >
    select count(*) from t_customer
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_customer
    <set >
      <if test="record.customerId != null" >
        customer_id = #{record.customerId,jdbcType=BIGINT},
      </if>
      <if test="record.shortName != null" >
        short_name = #{record.shortName,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.customerType != null" >
        customer_type = #{record.customerType,jdbcType=SMALLINT},
      </if>
      <if test="record.sex != null" >
        sex = #{record.sex,jdbcType=BIT},
      </if>
      <if test="record.birthday != null" >
        birthday = #{record.birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="record.mobilephone != null" >
        mobilephone = #{record.mobilephone,jdbcType=VARCHAR},
      </if>
      <if test="record.telephone != null" >
        telephone = #{record.telephone,jdbcType=VARCHAR},
      </if>
      <if test="record.mail != null" >
        mail = #{record.mail,jdbcType=VARCHAR},
      </if>
      <if test="record.houseId != null" >
        house_id = #{record.houseId,jdbcType=BIGINT},
      </if>
      <if test="record.buildingId != null" >
        building_id = #{record.buildingId,jdbcType=BIGINT},
      </if>
      <if test="record.tinyvillageId != null" >
        tinyvillage_Id = #{record.tinyvillageId,jdbcType=BIGINT},
      </if>
      <if test="record.villageId != null" >
        village_id = #{record.villageId,jdbcType=BIGINT},
      </if>
      <if test="record.townId != null" >
        town_id = #{record.townId,jdbcType=BIGINT},
      </if>
      <if test="record.countyId != null" >
        county_id = #{record.countyId,jdbcType=BIGINT},
      </if>
      <if test="record.cityId != null" >
        city_id = #{record.cityId,jdbcType=BIGINT},
      </if>
      <if test="record.provinceId != null" >
        province_id = #{record.provinceId,jdbcType=BIGINT},
      </if>
      <if test="record.houseType != null" >
        house_type = #{record.houseType,jdbcType=INTEGER},
      </if>
      <if test="record.storeId != null" >
        store_id = #{record.storeId,jdbcType=BIGINT},
      </if>
      <if test="record.job != null" >
        job = #{record.job,jdbcType=VARCHAR},
      </if>
      <if test="record.trade != null" >
        trade = #{record.trade,jdbcType=VARCHAR},
      </if>
      <if test="record.maritalStatus != null" >
        marital_status = #{record.maritalStatus,jdbcType=INTEGER},
      </if>
      <if test="record.childrenStatus != null" >
        children_status = #{record.childrenStatus,jdbcType=VARCHAR},
      </if>
      <if test="record.houseHold != null" >
        house_hold = #{record.houseHold,jdbcType=INTEGER},
      </if>
      <if test="record.memberFlag != null" >
        member_flag = #{record.memberFlag,jdbcType=SMALLINT},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_customer
    set customer_id = #{record.customerId,jdbcType=BIGINT},
      short_name = #{record.shortName,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      customer_type = #{record.customerType,jdbcType=SMALLINT},
      sex = #{record.sex,jdbcType=BIT},
      birthday = #{record.birthday,jdbcType=TIMESTAMP},
      mobilephone = #{record.mobilephone,jdbcType=VARCHAR},
      telephone = #{record.telephone,jdbcType=VARCHAR},
      mail = #{record.mail,jdbcType=VARCHAR},
      house_id = #{record.houseId,jdbcType=BIGINT},
      building_id = #{record.buildingId,jdbcType=BIGINT},
      tinyvillage_Id = #{record.tinyvillageId,jdbcType=BIGINT},
      village_id = #{record.villageId,jdbcType=BIGINT},
      town_id = #{record.townId,jdbcType=BIGINT},
      county_id = #{record.countyId,jdbcType=BIGINT},
      city_id = #{record.cityId,jdbcType=BIGINT},
      province_id = #{record.provinceId,jdbcType=BIGINT},
      house_type = #{record.houseType,jdbcType=INTEGER},
      store_id = #{record.storeId,jdbcType=BIGINT},
      job = #{record.job,jdbcType=VARCHAR},
      trade = #{record.trade,jdbcType=VARCHAR},
      marital_status = #{record.maritalStatus,jdbcType=INTEGER},
      children_status = #{record.childrenStatus,jdbcType=VARCHAR},
      house_hold = #{record.houseHold,jdbcType=INTEGER},
      member_flag = #{record.memberFlag,jdbcType=SMALLINT},
      status = #{record.status,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gatz.discovery.modules.cidm.model.TCustomer" >
    update t_customer
    <set >
      <if test="shortName != null" >
        short_name = #{shortName,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="customerType != null" >
        customer_type = #{customerType,jdbcType=SMALLINT},
      </if>
      <if test="sex != null" >
        sex = #{sex,jdbcType=BIT},
      </if>
      <if test="birthday != null" >
        birthday = #{birthday,jdbcType=TIMESTAMP},
      </if>
      <if test="mobilephone != null" >
        mobilephone = #{mobilephone,jdbcType=VARCHAR},
      </if>
      <if test="telephone != null" >
        telephone = #{telephone,jdbcType=VARCHAR},
      </if>
      <if test="mail != null" >
        mail = #{mail,jdbcType=VARCHAR},
      </if>
      <if test="houseId != null" >
        house_id = #{houseId,jdbcType=BIGINT},
      </if>
      <if test="buildingId != null" >
        building_id = #{buildingId,jdbcType=BIGINT},
      </if>
      <if test="tinyvillageId != null" >
        tinyvillage_Id = #{tinyvillageId,jdbcType=BIGINT},
      </if>
      <if test="villageId != null" >
        village_id = #{villageId,jdbcType=BIGINT},
      </if>
      <if test="townId != null" >
        town_id = #{townId,jdbcType=BIGINT},
      </if>
      <if test="countyId != null" >
        county_id = #{countyId,jdbcType=BIGINT},
      </if>
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=BIGINT},
      </if>
      <if test="provinceId != null" >
        province_id = #{provinceId,jdbcType=BIGINT},
      </if>
      <if test="houseType != null" >
        house_type = #{houseType,jdbcType=INTEGER},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=BIGINT},
      </if>
      <if test="job != null" >
        job = #{job,jdbcType=VARCHAR},
      </if>
      <if test="trade != null" >
        trade = #{trade,jdbcType=VARCHAR},
      </if>
      <if test="maritalStatus != null" >
        marital_status = #{maritalStatus,jdbcType=INTEGER},
      </if>
      <if test="childrenStatus != null" >
        children_status = #{childrenStatus,jdbcType=VARCHAR},
      </if>
      <if test="houseHold != null" >
        house_hold = #{houseHold,jdbcType=INTEGER},
      </if>
      <if test="memberFlag != null" >
        member_flag = #{memberFlag,jdbcType=SMALLINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where customer_id = #{customerId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gatz.discovery.modules.cidm.model.TCustomer" >
    update t_customer
    set short_name = #{shortName,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      customer_type = #{customerType,jdbcType=SMALLINT},
      sex = #{sex,jdbcType=BIT},
      birthday = #{birthday,jdbcType=TIMESTAMP},
      mobilephone = #{mobilephone,jdbcType=VARCHAR},
      telephone = #{telephone,jdbcType=VARCHAR},
      mail = #{mail,jdbcType=VARCHAR},
      house_id = #{houseId,jdbcType=BIGINT},
      building_id = #{buildingId,jdbcType=BIGINT},
      tinyvillage_Id = #{tinyvillageId,jdbcType=BIGINT},
      village_id = #{villageId,jdbcType=BIGINT},
      town_id = #{townId,jdbcType=BIGINT},
      county_id = #{countyId,jdbcType=BIGINT},
      city_id = #{cityId,jdbcType=BIGINT},
      province_id = #{provinceId,jdbcType=BIGINT},
      house_type = #{houseType,jdbcType=INTEGER},
      store_id = #{storeId,jdbcType=BIGINT},
      job = #{job,jdbcType=VARCHAR},
      trade = #{trade,jdbcType=VARCHAR},
      marital_status = #{maritalStatus,jdbcType=INTEGER},
      children_status = #{childrenStatus,jdbcType=VARCHAR},
      house_hold = #{houseHold,jdbcType=INTEGER},
      member_flag = #{memberFlag,jdbcType=SMALLINT},
      status = #{status,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where customer_id = #{customerId,jdbcType=BIGINT}
  </update>
  
  	<!-- 根据街道获取国安社区用户量 -->
     <select id="selectUsers" resultMap="BaseResultMap" parameterType = "java.util.Map">
	SELECT tmp.create_time,
SUM(tmp1.population) AS population
 FROM (SELECT
	t.create_time,
	COUNT(t.create_time) population
FROM
	t_customer t
WHERE
	customer_type = 10 and t.status=0
	 AND t.province_id IS NOT NULL AND t.city_id IS NOT NULL AND t.county_id IS NOT NULL AND t.town_id IS NOT NULL AND t.village_id IS NOT NULL 
<if test="type==1" >
						AND province_id=#{id}
					</if>
					<if test="type==2">
					AND city_id=#{id}
					</if>
					<if test="type==3">
					AND county_id=#{id}
					</if>
					<if test="type==4">
					AND town_id=#{id}
					</if>
					<if test="type==5">
					AND village_id=#{id}
					</if>
					<if test="type==6">
					AND tinyvillage_Id=#{id}
					</if>
					<if test="type==7">
					and tinyvillage_Id=#{tinyvillageId}
					AND building_id=#{id} and house_type =(select tinyvillage_type from t_tiny_village where tinyvillage_Id=#{tinyvillageId}) 
					</if>
AND EXTRACT(YEAR_MONTH FROM t.create_time) BETWEEN PERIOD_ADD(
	EXTRACT(YEAR_MONTH FROM NOW()) ,- 8
)
AND EXTRACT(YEAR_MONTH FROM NOW())
GROUP BY
	EXTRACT(YEAR_MONTH FROM t.create_time)) tmp
	
	INNER JOIN 
	 (SELECT
	t.create_time,
	COUNT(t.create_time) population
FROM
	t_customer t
WHERE
	customer_type = 10 and t.status=0
	 AND t.province_id IS NOT NULL AND t.city_id IS NOT NULL AND t.county_id IS NOT NULL AND t.town_id IS NOT NULL AND t.village_id IS NOT NULL 
<if test="type==1" >
						AND province_id=#{id}
					</if>
					<if test="type==2">
					AND city_id=#{id}
					</if>
					<if test="type==3">
					AND county_id=#{id}
					</if>
					<if test="type==4">
					AND town_id=#{id}
					</if>
					<if test="type==5">
					AND village_id=#{id}
					</if>
					<if test="type==6">
					AND tinyvillage_Id=#{id}
					</if>
					<if test="type==7">
					and tinyvillage_Id=#{tinyvillageId}
					AND building_id=#{id} and house_type =(select tinyvillage_type from t_tiny_village where tinyvillage_Id=#{tinyvillageId}) 
					</if>
AND EXTRACT(YEAR_MONTH FROM t.create_time) BETWEEN PERIOD_ADD(
	EXTRACT(YEAR_MONTH FROM NOW()) ,- 8
)
AND EXTRACT(YEAR_MONTH FROM NOW())
GROUP BY
	EXTRACT(YEAR_MONTH FROM t.create_time)) tmp1
	ON tmp.create_time>=tmp1.create_time
	GROUP BY tmp.create_time
ORDER BY  tmp.create_time
	  </select>

</mapper>