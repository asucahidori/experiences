<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gatz.discovery.modules.cidm.dao.TCountyMapper" >
  <resultMap id="BaseResultMap" type="com.gatz.discovery.modules.cidm.model.TCounty" >
    <id column="county_id" property="countyId" jdbcType="BIGINT" />
    <result column="gb_code" property="gbCode" jdbcType="VARCHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="city_id" property="cityId" jdbcType="BIGINT" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
   </resultMap>
    
    <resultMap id="OrderMap" type="com.gatz.discovery.modules.cidm.model.OrderMap" >
    	<!-- <id column="id" property="id" jdbcType="BIGINT" /> -->
    	<result column="name" property="name" jdbcType="VARCHAR" />
    	<result column="ordersCount" property="ordersCount" jdbcType="DOUBLE" />
    	<result column="date" property="date" jdbcType="TIMESTAMP" />
    	<result column="population" property="population" jdbcType="BIGINT" />
    </resultMap>
    
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    county_id, gb_code, name, city_id, status, version, create_user, create_time, update_user, 
    update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gatz.discovery.modules.cidm.model.TCountyExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_county
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_county
    where county_id = #{countyId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_county
    where county_id = #{countyId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gatz.discovery.modules.cidm.model.TCountyExample" >
    delete from t_county
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gatz.discovery.modules.cidm.model.TCounty" >
    insert into t_county (county_id, gb_code, name, 
      city_id, status, version, 
      create_user, create_time, update_user, 
      update_time)
    values (#{countyId,jdbcType=BIGINT}, #{gbCode,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{cityId,jdbcType=BIGINT}, #{status,jdbcType=INTEGER}, #{version,jdbcType=INTEGER}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.gatz.discovery.modules.cidm.model.TCounty" >
    insert into t_county
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="countyId != null" >
        county_id,
      </if>
      <if test="gbCode != null" >
        gb_code,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="countyId != null" >
        #{countyId,jdbcType=BIGINT},
      </if>
      <if test="gbCode != null" >
        #{gbCode,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gatz.discovery.modules.cidm.model.TCountyExample" resultType="java.lang.Integer" >
    select count(*) from t_county
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_county
    <set >
      <if test="record.countyId != null" >
        county_id = #{record.countyId,jdbcType=BIGINT},
      </if>
      <if test="record.gbCode != null" >
        gb_code = #{record.gbCode,jdbcType=VARCHAR},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.cityId != null" >
        city_id = #{record.cityId,jdbcType=BIGINT},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_county
    set county_id = #{record.countyId,jdbcType=BIGINT},
      gb_code = #{record.gbCode,jdbcType=VARCHAR},
      name = #{record.name,jdbcType=VARCHAR},
      city_id = #{record.cityId,jdbcType=BIGINT},
      status = #{record.status,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gatz.discovery.modules.cidm.model.TCounty" >
    update t_county
    <set >
      <if test="gbCode != null" >
        gb_code = #{gbCode,jdbcType=VARCHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=BIGINT},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where county_id = #{countyId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gatz.discovery.modules.cidm.model.TCounty" >
    update t_county
    set gb_code = #{gbCode,jdbcType=VARCHAR},
      name = #{name,jdbcType=VARCHAR},
      city_id = #{cityId,jdbcType=BIGINT},
      status = #{status,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where county_id = #{countyId,jdbcType=BIGINT}
  </update>
    <!-- 各区国安用户量 type=1-->
  <select id="guoAnEveryAreaConut" resultMap="OrderMap" parameterType="java.util.Map">
		SELECT count(c.customer_id) population,co.`name` FROM
		t_county co
		LEFT JOIN  t_customer c on co.county_id=c.county_id and c.customer_type=10 AND c.`status`=0
		where 
		co.city_id in (SELECT tc.city_id from t_city tc WHERE tc.province_id=#{id}) and co.status=0
		GROUP BY co.name ORDER BY co.county_id
  </select>
  
<!--     各街道国安用户量   type=3-->
      <select id="guoAnEveryConutByArea" resultMap="OrderMap" parameterType="java.util.Map">
		SELECT count(c.customer_id) population,t.`name` FROM
			t_town t
		LEFT JOIN  t_customer c on t.town_id=c.town_id and c.customer_type=10 AND c.`status`=0
		where 
			t.county_id=#{id} and t.status=0
		GROUP BY t.town_id ORDER BY population desc LIMIT 10
  </select>
  <!-- 街道进如显示各社区报表  type=6 -->
   <select id="guoAnEveryCountByStreet" resultMap="OrderMap" parameterType="java.util.Map">
		SELECT count(c.customer_id) population,t.`name` FROM
			t_village t
		LEFT JOIN  t_customer c on t.village_id=c.village_id and c.customer_type=10 AND c.`status`=0
		WHERE 
			t.town_id=#{id} and t.status=0
		GROUP BY t.name
  </select>

  <!-- 各区订单金额 按日期-->
  <select id="everyOrderCounts" resultMap="OrderMap" parameterType="java.util.Map">
	 SELECT
	c.`name`,
	FLOOR(IFNULL(ordersCount, 0)) AS ordersCount
FROM
	t_county c
LEFT JOIN (
	SELECT
		IFNULL(sum(o.payable_price), 0) ordersCount,
		o.area_id
	FROM
		t_county tc
	LEFT JOIN t_sum_ord_5grd o ON tc.county_id = o.area_id
	WHERE
		o.area_type = 3
<!-- 	AND tc.city_id = #{id}
 -->	AND o.`status` = 0
	GROUP BY
		tc.county_id
) s ON c.county_id = s.area_id
WHERE
	c.city_id IN (SELECT
			tc.city_id
		FROM
			t_city tc
		WHERE
			tc.province_id = #{id})
AND c.`status` = 0
ORDER BY
	c.county_id
  </select>
  
  <!-- -->
    <select id="everyAreaOrderCounts" resultMap="OrderMap" parameterType="java.util.Map">
      	   SELECT t.`name`,
	 floor(IFNULL(ordersCount,0)) as ordersCount from t_town t LEFT JOIN 
	 (SELECT IFNULL(sum(o.payable_price),0) ordersCount ,o.area_id from t_town tt LEFT JOIN t_sum_ord_5grd o on tt.town_id=o.area_id WHERE o.area_type=4 and o.`status`=0 and tt.county_id=#{id} GROUP BY tt.town_id) s on t.town_id=s.area_id WHERE t.county_id=#{id} ORDER BY ordersCount desc LIMIT 10
  </select>
  
  
 	<!-- 根据街道获取各区订单金额 -->
 	 <select id="getEveryOrdersByStreet" resultMap="OrderMap" parameterType="java.util.Map">
 	 
 	SELECT t.`name`,
	 floor(IFNULL(ordersCount,0)) as ordersCount from t_village t LEFT JOIN 
	 (SELECT IFNULL(sum(o.payable_price),0) ordersCount ,o.area_id from t_village tv LEFT JOIN t_sum_ord_5grd o on tv.village_id=o.area_id WHERE o.area_type=5 and o.`status`=0 and tv.town_id=#{id} GROUP BY tv.village_id) s on t.village_id=s.area_id WHERE t.town_id=#{id} ;
<!--       	     SELECT -->
<!-- 	co.`name`, -->
<!-- 	IFNULL(sum(c.payable_price),0) ordersCount -->
<!-- FROM -->
<!-- 	t_town co -->
<!-- LEFT JOIN t_sum_ord_5grd c ON co.town_id = c.area_id -->
<!-- WHERE -->
<!-- 	co.county_id = #{id}  -->
<!-- GROUP BY -->
<!-- 	co. NAME -->
  </select>
  
  <!-- 根据小区获取订单额 -->
  <select id="getEveryOrdersByTown" resultMap="OrderMap" parameterType="java.util.Map">
SELECT
			ts.date,
			FLOOR(ts.payable_price)  ordersCount
		FROM
		 t_sum_ord_5grd ts 
		WHERE
			ts.area_id=#{id}
			and ts.area_type=#{type}
		AND EXTRACT(YEAR_MONTH FROM ts.date) BETWEEN PERIOD_ADD(EXTRACT(YEAR_MONTH FROM NOW()) ,- 8)
		AND EXTRACT(YEAR_MONTH FROM NOW())
		GROUP BY
			EXTRACT(YEAR_MONTH FROM ts.date)
  </select>
  <!-- 查询 列表-->
 <select id="queryTcounty" parameterType="java.util.Map" resultMap="BaseResultMap">
     select
			 t.county_id , 
			 t.gb_code , 
			 t.name , 
			 t.city_id , 
			 t.status , 
			 t.version , 
			 t.create_user , 
			 t.create_time , 
			 t.update_user , 
			 t.update_time
	   from  t_county t
     <where> 
     	and t.status=0
		       <if test="countyId != null">
				  and county_id = #{countyId}
				</if>
		       <if test="gbCode != null and gbCode !=''">
				  and gb_code = #{gbCode}
				</if>
		       <if test="name != null and name !=''">
				  and name = #{name}
				</if>
		       <if test="cityId != null">
				  and city_id = #{cityId}
				</if>
		       <if test="version != null">
				  and version = #{version}
				</if>
		       <if test="createUser != null and createUser !=''">
				  and create_user = #{createUser}
				</if>
		        <if test="start_create_time !=null and start_create_time !=''">
				   and create_time &gt;= #{start_create_time,jdbcType=TIMESTAMP}
				</if>
		        <if test="end_create_time !=null and end_create_time !=''">
				   and create_time &lt;= #{end_create_time,jdbcType=TIMESTAMP}
				</if>
		       <if test="createTime != null and createTime !=''">
				  and create_time = #{createTime}
				</if>
		       <if test="updateUser != null and updateUser !=''">
				  and update_user = #{updateUser}
				</if>
		         <if test="start_update_time !=null and start_update_time !=''">
				   and update_time &gt;= #{start_update_time,jdbcType=TIMESTAMP}
				</if>
		        <if test="end_update_time !=null and end_update_time !=''">
				   and update_time &lt;= #{end_update_time,jdbcType=TIMESTAMP}
				</if>
     </where>
     <if test="from != null  and  rows != null ">
		     limit #{ from},#{ rows}
        </if>
 </select>
</mapper>