<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gatz.discovery.modules.cidm.dao.TOrderMapper" >
  <resultMap id="BaseResultMap" type="com.gatz.discovery.modules.cidm.model.TOrder" >
    <id column="id" property="id" jdbcType="BIGINT" />
    <result column="order_sn" property="orderSn" jdbcType="VARCHAR" />
    <result column="group_id" property="groupId" jdbcType="VARCHAR" />
    <result column="order_type" property="orderType" jdbcType="INTEGER" />
    <result column="customer_id" property="customerId" jdbcType="BIGINT" />
    <result column="consignee" property="consignee" jdbcType="VARCHAR" />
    <result column="consignee_phone" property="consigneePhone" jdbcType="VARCHAR" />
    <result column="province_id" property="provinceId" jdbcType="BIGINT" />
    <result column="city_id" property="cityId" jdbcType="BIGINT" />
    <result column="county_id" property="countyId" jdbcType="BIGINT" />
    <result column="town_id" property="townId" jdbcType="BIGINT" />
    <result column="village_id" property="villageId" jdbcType="BIGINT" />
    <result column="tiny_village_id" property="tinyVillageId" jdbcType="BIGINT" />
    <result column="building_id" property="buildingId" jdbcType="BIGINT" />
    <result column="detail_address" property="detailAddress" jdbcType="VARCHAR" />
    <result column="complete_address" property="completeAddress" jdbcType="VARCHAR" />
    <result column="employee_id" property="employeeId" jdbcType="BIGINT" />
    <result column="employee_phone" property="employeePhone" jdbcType="VARCHAR" />
    <result column="employee_name" property="employeeName" jdbcType="VARCHAR" />
    <result column="store_id" property="storeId" jdbcType="BIGINT" />
    <result column="eshop_id" property="eshopId" jdbcType="BIGINT" />
    <result column="eshop_name" property="eshopName" jdbcType="VARCHAR" />
    <result column="receipts_id" property="receiptsId" jdbcType="BIGINT" />
    <result column="evaluation_status" property="evaluationStatus" jdbcType="INTEGER" />
    <result column="appointment_start_time" property="appointmentStartTime" jdbcType="TIMESTAMP" />
    <result column="appointment_end_time" property="appointmentEndTime" jdbcType="TIMESTAMP" />
    <result column="order_status" property="orderStatus" jdbcType="INTEGER" />
    <result column="order_source" property="orderSource" jdbcType="INTEGER" />
    <result column="invoice_status" property="invoiceStatus" jdbcType="INTEGER" />
    <result column="seller_remark" property="sellerRemark" jdbcType="VARCHAR" />
    <result column="buyer_remark" property="buyerRemark" jdbcType="VARCHAR" />
    <result column="employee_remark" property="employeeRemark" jdbcType="VARCHAR" />
    <result column="payment" property="payment" jdbcType="INTEGER" />
    <result column="pay_status" property="payStatus" jdbcType="INTEGER" />
    <result column="pay_platform" property="payPlatform" jdbcType="INTEGER" />
    <result column="pay_time" property="payTime" jdbcType="TIMESTAMP" />
    <result column="trading_price" property="tradingPrice" jdbcType="DECIMAL" />
    <result column="freight" property="freight" jdbcType="DECIMAL" />
    <result column="coupon_id" property="couponId" jdbcType="BIGINT" />
    <result column="payable_price" property="payablePrice" jdbcType="DECIMAL" />
    <result column="abnormal_status" property="abnormalStatus" jdbcType="INTEGER" />
    <result column="delivery_type" property="deliveryType" jdbcType="INTEGER" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="create_user_id" property="createUserId" jdbcType="BIGINT" />
    <result column="update_user_id" property="updateUserId" jdbcType="BIGINT" />
    <result column="total_weight" property="totalWeight" jdbcType="DOUBLE" />
    <result column="total_quantity" property="totalQuantity" jdbcType="INTEGER" />
    <result column="receive_or_send" property="receiveOrSend" jdbcType="INTEGER" />
    <result column="clothes_amount" property="clothesAmount" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, order_sn, group_id, order_type, customer_id, consignee, consignee_phone, province_id, 
    city_id, county_id, town_id, village_id, tiny_village_id, building_id, detail_address, 
    complete_address, employee_id, employee_phone, employee_name, store_id, eshop_id, 
    eshop_name, receipts_id, evaluation_status, appointment_start_time, appointment_end_time, 
    order_status, order_source, invoice_status, seller_remark, buyer_remark, employee_remark, 
    payment, pay_status, pay_platform, pay_time, trading_price, freight, coupon_id, payable_price, 
    abnormal_status, delivery_type, status, version, create_user, create_time, update_user, 
    update_time, create_user_id, update_user_id, total_weight, total_quantity, receive_or_send, 
    clothes_amount
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gatz.discovery.modules.cidm.model.TOrderExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_order
    where id = #{id,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_order
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gatz.discovery.modules.cidm.model.TOrderExample" >
    delete from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gatz.discovery.modules.cidm.model.TOrder" >
    insert into t_order (id, order_sn, group_id, 
      order_type, customer_id, consignee, 
      consignee_phone, province_id, city_id, 
      county_id, town_id, village_id, 
      tiny_village_id, building_id, detail_address, 
      complete_address, employee_id, employee_phone, 
      employee_name, store_id, eshop_id, 
      eshop_name, receipts_id, evaluation_status, 
      appointment_start_time, appointment_end_time, 
      order_status, order_source, invoice_status, 
      seller_remark, buyer_remark, employee_remark, 
      payment, pay_status, pay_platform, 
      pay_time, trading_price, freight, 
      coupon_id, payable_price, abnormal_status, 
      delivery_type, status, version, 
      create_user, create_time, update_user, 
      update_time, create_user_id, update_user_id, 
      total_weight, total_quantity, receive_or_send, 
      clothes_amount)
    values (#{id,jdbcType=BIGINT}, #{orderSn,jdbcType=VARCHAR}, #{groupId,jdbcType=VARCHAR}, 
      #{orderType,jdbcType=INTEGER}, #{customerId,jdbcType=BIGINT}, #{consignee,jdbcType=VARCHAR}, 
      #{consigneePhone,jdbcType=VARCHAR}, #{provinceId,jdbcType=BIGINT}, #{cityId,jdbcType=BIGINT}, 
      #{countyId,jdbcType=BIGINT}, #{townId,jdbcType=BIGINT}, #{villageId,jdbcType=BIGINT}, 
      #{tinyVillageId,jdbcType=BIGINT}, #{buildingId,jdbcType=BIGINT}, #{detailAddress,jdbcType=VARCHAR}, 
      #{completeAddress,jdbcType=VARCHAR}, #{employeeId,jdbcType=BIGINT}, #{employeePhone,jdbcType=VARCHAR}, 
      #{employeeName,jdbcType=VARCHAR}, #{storeId,jdbcType=BIGINT}, #{eshopId,jdbcType=BIGINT}, 
      #{eshopName,jdbcType=VARCHAR}, #{receiptsId,jdbcType=BIGINT}, #{evaluationStatus,jdbcType=INTEGER}, 
      #{appointmentStartTime,jdbcType=TIMESTAMP}, #{appointmentEndTime,jdbcType=TIMESTAMP}, 
      #{orderStatus,jdbcType=INTEGER}, #{orderSource,jdbcType=INTEGER}, #{invoiceStatus,jdbcType=INTEGER}, 
      #{sellerRemark,jdbcType=VARCHAR}, #{buyerRemark,jdbcType=VARCHAR}, #{employeeRemark,jdbcType=VARCHAR}, 
      #{payment,jdbcType=INTEGER}, #{payStatus,jdbcType=INTEGER}, #{payPlatform,jdbcType=INTEGER}, 
      #{payTime,jdbcType=TIMESTAMP}, #{tradingPrice,jdbcType=DECIMAL}, #{freight,jdbcType=DECIMAL}, 
      #{couponId,jdbcType=BIGINT}, #{payablePrice,jdbcType=DECIMAL}, #{abnormalStatus,jdbcType=INTEGER}, 
      #{deliveryType,jdbcType=INTEGER}, #{status,jdbcType=INTEGER}, #{version,jdbcType=INTEGER}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{createUserId,jdbcType=BIGINT}, #{updateUserId,jdbcType=BIGINT}, 
      #{totalWeight,jdbcType=DOUBLE}, #{totalQuantity,jdbcType=INTEGER}, #{receiveOrSend,jdbcType=INTEGER}, 
      #{clothesAmount,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.gatz.discovery.modules.cidm.model.TOrder" >
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="orderSn != null" >
        order_sn,
      </if>
      <if test="groupId != null" >
        group_id,
      </if>
      <if test="orderType != null" >
        order_type,
      </if>
      <if test="customerId != null" >
        customer_id,
      </if>
      <if test="consignee != null" >
        consignee,
      </if>
      <if test="consigneePhone != null" >
        consignee_phone,
      </if>
      <if test="provinceId != null" >
        province_id,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
      <if test="countyId != null" >
        county_id,
      </if>
      <if test="townId != null" >
        town_id,
      </if>
      <if test="villageId != null" >
        village_id,
      </if>
      <if test="tinyVillageId != null" >
        tiny_village_id,
      </if>
      <if test="buildingId != null" >
        building_id,
      </if>
      <if test="detailAddress != null" >
        detail_address,
      </if>
      <if test="completeAddress != null" >
        complete_address,
      </if>
      <if test="employeeId != null" >
        employee_id,
      </if>
      <if test="employeePhone != null" >
        employee_phone,
      </if>
      <if test="employeeName != null" >
        employee_name,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="eshopId != null" >
        eshop_id,
      </if>
      <if test="eshopName != null" >
        eshop_name,
      </if>
      <if test="receiptsId != null" >
        receipts_id,
      </if>
      <if test="evaluationStatus != null" >
        evaluation_status,
      </if>
      <if test="appointmentStartTime != null" >
        appointment_start_time,
      </if>
      <if test="appointmentEndTime != null" >
        appointment_end_time,
      </if>
      <if test="orderStatus != null" >
        order_status,
      </if>
      <if test="orderSource != null" >
        order_source,
      </if>
      <if test="invoiceStatus != null" >
        invoice_status,
      </if>
      <if test="sellerRemark != null" >
        seller_remark,
      </if>
      <if test="buyerRemark != null" >
        buyer_remark,
      </if>
      <if test="employeeRemark != null" >
        employee_remark,
      </if>
      <if test="payment != null" >
        payment,
      </if>
      <if test="payStatus != null" >
        pay_status,
      </if>
      <if test="payPlatform != null" >
        pay_platform,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="tradingPrice != null" >
        trading_price,
      </if>
      <if test="freight != null" >
        freight,
      </if>
      <if test="couponId != null" >
        coupon_id,
      </if>
      <if test="payablePrice != null" >
        payable_price,
      </if>
      <if test="abnormalStatus != null" >
        abnormal_status,
      </if>
      <if test="deliveryType != null" >
        delivery_type,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="createUserId != null" >
        create_user_id,
      </if>
      <if test="updateUserId != null" >
        update_user_id,
      </if>
      <if test="totalWeight != null" >
        total_weight,
      </if>
      <if test="totalQuantity != null" >
        total_quantity,
      </if>
      <if test="receiveOrSend != null" >
        receive_or_send,
      </if>
      <if test="clothesAmount != null" >
        clothes_amount,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=BIGINT},
      </if>
      <if test="orderSn != null" >
        #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        #{orderType,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        #{customerId,jdbcType=BIGINT},
      </if>
      <if test="consignee != null" >
        #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="consigneePhone != null" >
        #{consigneePhone,jdbcType=VARCHAR},
      </if>
      <if test="provinceId != null" >
        #{provinceId,jdbcType=BIGINT},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=BIGINT},
      </if>
      <if test="countyId != null" >
        #{countyId,jdbcType=BIGINT},
      </if>
      <if test="townId != null" >
        #{townId,jdbcType=BIGINT},
      </if>
      <if test="villageId != null" >
        #{villageId,jdbcType=BIGINT},
      </if>
      <if test="tinyVillageId != null" >
        #{tinyVillageId,jdbcType=BIGINT},
      </if>
      <if test="buildingId != null" >
        #{buildingId,jdbcType=BIGINT},
      </if>
      <if test="detailAddress != null" >
        #{detailAddress,jdbcType=VARCHAR},
      </if>
      <if test="completeAddress != null" >
        #{completeAddress,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null" >
        #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="employeePhone != null" >
        #{employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="employeeName != null" >
        #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=BIGINT},
      </if>
      <if test="eshopId != null" >
        #{eshopId,jdbcType=BIGINT},
      </if>
      <if test="eshopName != null" >
        #{eshopName,jdbcType=VARCHAR},
      </if>
      <if test="receiptsId != null" >
        #{receiptsId,jdbcType=BIGINT},
      </if>
      <if test="evaluationStatus != null" >
        #{evaluationStatus,jdbcType=INTEGER},
      </if>
      <if test="appointmentStartTime != null" >
        #{appointmentStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appointmentEndTime != null" >
        #{appointmentEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderStatus != null" >
        #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="orderSource != null" >
        #{orderSource,jdbcType=INTEGER},
      </if>
      <if test="invoiceStatus != null" >
        #{invoiceStatus,jdbcType=INTEGER},
      </if>
      <if test="sellerRemark != null" >
        #{sellerRemark,jdbcType=VARCHAR},
      </if>
      <if test="buyerRemark != null" >
        #{buyerRemark,jdbcType=VARCHAR},
      </if>
      <if test="employeeRemark != null" >
        #{employeeRemark,jdbcType=VARCHAR},
      </if>
      <if test="payment != null" >
        #{payment,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null" >
        #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="payPlatform != null" >
        #{payPlatform,jdbcType=INTEGER},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tradingPrice != null" >
        #{tradingPrice,jdbcType=DECIMAL},
      </if>
      <if test="freight != null" >
        #{freight,jdbcType=DECIMAL},
      </if>
      <if test="couponId != null" >
        #{couponId,jdbcType=BIGINT},
      </if>
      <if test="payablePrice != null" >
        #{payablePrice,jdbcType=DECIMAL},
      </if>
      <if test="abnormalStatus != null" >
        #{abnormalStatus,jdbcType=INTEGER},
      </if>
      <if test="deliveryType != null" >
        #{deliveryType,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateUserId != null" >
        #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="totalWeight != null" >
        #{totalWeight,jdbcType=DOUBLE},
      </if>
      <if test="totalQuantity != null" >
        #{totalQuantity,jdbcType=INTEGER},
      </if>
      <if test="receiveOrSend != null" >
        #{receiveOrSend,jdbcType=INTEGER},
      </if>
      <if test="clothesAmount != null" >
        #{clothesAmount,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gatz.discovery.modules.cidm.model.TOrderExample" resultType="java.lang.Integer" >
    select count(*) from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_order
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=BIGINT},
      </if>
      <if test="record.orderSn != null" >
        order_sn = #{record.orderSn,jdbcType=VARCHAR},
      </if>
      <if test="record.groupId != null" >
        group_id = #{record.groupId,jdbcType=VARCHAR},
      </if>
      <if test="record.orderType != null" >
        order_type = #{record.orderType,jdbcType=INTEGER},
      </if>
      <if test="record.customerId != null" >
        customer_id = #{record.customerId,jdbcType=BIGINT},
      </if>
      <if test="record.consignee != null" >
        consignee = #{record.consignee,jdbcType=VARCHAR},
      </if>
      <if test="record.consigneePhone != null" >
        consignee_phone = #{record.consigneePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.provinceId != null" >
        province_id = #{record.provinceId,jdbcType=BIGINT},
      </if>
      <if test="record.cityId != null" >
        city_id = #{record.cityId,jdbcType=BIGINT},
      </if>
      <if test="record.countyId != null" >
        county_id = #{record.countyId,jdbcType=BIGINT},
      </if>
      <if test="record.townId != null" >
        town_id = #{record.townId,jdbcType=BIGINT},
      </if>
      <if test="record.villageId != null" >
        village_id = #{record.villageId,jdbcType=BIGINT},
      </if>
      <if test="record.tinyVillageId != null" >
        tiny_village_id = #{record.tinyVillageId,jdbcType=BIGINT},
      </if>
      <if test="record.buildingId != null" >
        building_id = #{record.buildingId,jdbcType=BIGINT},
      </if>
      <if test="record.detailAddress != null" >
        detail_address = #{record.detailAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.completeAddress != null" >
        complete_address = #{record.completeAddress,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeId != null" >
        employee_id = #{record.employeeId,jdbcType=BIGINT},
      </if>
      <if test="record.employeePhone != null" >
        employee_phone = #{record.employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeName != null" >
        employee_name = #{record.employeeName,jdbcType=VARCHAR},
      </if>
      <if test="record.storeId != null" >
        store_id = #{record.storeId,jdbcType=BIGINT},
      </if>
      <if test="record.eshopId != null" >
        eshop_id = #{record.eshopId,jdbcType=BIGINT},
      </if>
      <if test="record.eshopName != null" >
        eshop_name = #{record.eshopName,jdbcType=VARCHAR},
      </if>
      <if test="record.receiptsId != null" >
        receipts_id = #{record.receiptsId,jdbcType=BIGINT},
      </if>
      <if test="record.evaluationStatus != null" >
        evaluation_status = #{record.evaluationStatus,jdbcType=INTEGER},
      </if>
      <if test="record.appointmentStartTime != null" >
        appointment_start_time = #{record.appointmentStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.appointmentEndTime != null" >
        appointment_end_time = #{record.appointmentEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.orderStatus != null" >
        order_status = #{record.orderStatus,jdbcType=INTEGER},
      </if>
      <if test="record.orderSource != null" >
        order_source = #{record.orderSource,jdbcType=INTEGER},
      </if>
      <if test="record.invoiceStatus != null" >
        invoice_status = #{record.invoiceStatus,jdbcType=INTEGER},
      </if>
      <if test="record.sellerRemark != null" >
        seller_remark = #{record.sellerRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.buyerRemark != null" >
        buyer_remark = #{record.buyerRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.employeeRemark != null" >
        employee_remark = #{record.employeeRemark,jdbcType=VARCHAR},
      </if>
      <if test="record.payment != null" >
        payment = #{record.payment,jdbcType=INTEGER},
      </if>
      <if test="record.payStatus != null" >
        pay_status = #{record.payStatus,jdbcType=INTEGER},
      </if>
      <if test="record.payPlatform != null" >
        pay_platform = #{record.payPlatform,jdbcType=INTEGER},
      </if>
      <if test="record.payTime != null" >
        pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.tradingPrice != null" >
        trading_price = #{record.tradingPrice,jdbcType=DECIMAL},
      </if>
      <if test="record.freight != null" >
        freight = #{record.freight,jdbcType=DECIMAL},
      </if>
      <if test="record.couponId != null" >
        coupon_id = #{record.couponId,jdbcType=BIGINT},
      </if>
      <if test="record.payablePrice != null" >
        payable_price = #{record.payablePrice,jdbcType=DECIMAL},
      </if>
      <if test="record.abnormalStatus != null" >
        abnormal_status = #{record.abnormalStatus,jdbcType=INTEGER},
      </if>
      <if test="record.deliveryType != null" >
        delivery_type = #{record.deliveryType,jdbcType=INTEGER},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.createUserId != null" >
        create_user_id = #{record.createUserId,jdbcType=BIGINT},
      </if>
      <if test="record.updateUserId != null" >
        update_user_id = #{record.updateUserId,jdbcType=BIGINT},
      </if>
      <if test="record.totalWeight != null" >
        total_weight = #{record.totalWeight,jdbcType=DOUBLE},
      </if>
      <if test="record.totalQuantity != null" >
        total_quantity = #{record.totalQuantity,jdbcType=INTEGER},
      </if>
      <if test="record.receiveOrSend != null" >
        receive_or_send = #{record.receiveOrSend,jdbcType=INTEGER},
      </if>
      <if test="record.clothesAmount != null" >
        clothes_amount = #{record.clothesAmount,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_order
    set id = #{record.id,jdbcType=BIGINT},
      order_sn = #{record.orderSn,jdbcType=VARCHAR},
      group_id = #{record.groupId,jdbcType=VARCHAR},
      order_type = #{record.orderType,jdbcType=INTEGER},
      customer_id = #{record.customerId,jdbcType=BIGINT},
      consignee = #{record.consignee,jdbcType=VARCHAR},
      consignee_phone = #{record.consigneePhone,jdbcType=VARCHAR},
      province_id = #{record.provinceId,jdbcType=BIGINT},
      city_id = #{record.cityId,jdbcType=BIGINT},
      county_id = #{record.countyId,jdbcType=BIGINT},
      town_id = #{record.townId,jdbcType=BIGINT},
      village_id = #{record.villageId,jdbcType=BIGINT},
      tiny_village_id = #{record.tinyVillageId,jdbcType=BIGINT},
      building_id = #{record.buildingId,jdbcType=BIGINT},
      detail_address = #{record.detailAddress,jdbcType=VARCHAR},
      complete_address = #{record.completeAddress,jdbcType=VARCHAR},
      employee_id = #{record.employeeId,jdbcType=BIGINT},
      employee_phone = #{record.employeePhone,jdbcType=VARCHAR},
      employee_name = #{record.employeeName,jdbcType=VARCHAR},
      store_id = #{record.storeId,jdbcType=BIGINT},
      eshop_id = #{record.eshopId,jdbcType=BIGINT},
      eshop_name = #{record.eshopName,jdbcType=VARCHAR},
      receipts_id = #{record.receiptsId,jdbcType=BIGINT},
      evaluation_status = #{record.evaluationStatus,jdbcType=INTEGER},
      appointment_start_time = #{record.appointmentStartTime,jdbcType=TIMESTAMP},
      appointment_end_time = #{record.appointmentEndTime,jdbcType=TIMESTAMP},
      order_status = #{record.orderStatus,jdbcType=INTEGER},
      order_source = #{record.orderSource,jdbcType=INTEGER},
      invoice_status = #{record.invoiceStatus,jdbcType=INTEGER},
      seller_remark = #{record.sellerRemark,jdbcType=VARCHAR},
      buyer_remark = #{record.buyerRemark,jdbcType=VARCHAR},
      employee_remark = #{record.employeeRemark,jdbcType=VARCHAR},
      payment = #{record.payment,jdbcType=INTEGER},
      pay_status = #{record.payStatus,jdbcType=INTEGER},
      pay_platform = #{record.payPlatform,jdbcType=INTEGER},
      pay_time = #{record.payTime,jdbcType=TIMESTAMP},
      trading_price = #{record.tradingPrice,jdbcType=DECIMAL},
      freight = #{record.freight,jdbcType=DECIMAL},
      coupon_id = #{record.couponId,jdbcType=BIGINT},
      payable_price = #{record.payablePrice,jdbcType=DECIMAL},
      abnormal_status = #{record.abnormalStatus,jdbcType=INTEGER},
      delivery_type = #{record.deliveryType,jdbcType=INTEGER},
      status = #{record.status,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{record.createUserId,jdbcType=BIGINT},
      update_user_id = #{record.updateUserId,jdbcType=BIGINT},
      total_weight = #{record.totalWeight,jdbcType=DOUBLE},
      total_quantity = #{record.totalQuantity,jdbcType=INTEGER},
      receive_or_send = #{record.receiveOrSend,jdbcType=INTEGER},
      clothes_amount = #{record.clothesAmount,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gatz.discovery.modules.cidm.model.TOrder" >
    update t_order
    <set >
      <if test="orderSn != null" >
        order_sn = #{orderSn,jdbcType=VARCHAR},
      </if>
      <if test="groupId != null" >
        group_id = #{groupId,jdbcType=VARCHAR},
      </if>
      <if test="orderType != null" >
        order_type = #{orderType,jdbcType=INTEGER},
      </if>
      <if test="customerId != null" >
        customer_id = #{customerId,jdbcType=BIGINT},
      </if>
      <if test="consignee != null" >
        consignee = #{consignee,jdbcType=VARCHAR},
      </if>
      <if test="consigneePhone != null" >
        consignee_phone = #{consigneePhone,jdbcType=VARCHAR},
      </if>
      <if test="provinceId != null" >
        province_id = #{provinceId,jdbcType=BIGINT},
      </if>
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=BIGINT},
      </if>
      <if test="countyId != null" >
        county_id = #{countyId,jdbcType=BIGINT},
      </if>
      <if test="townId != null" >
        town_id = #{townId,jdbcType=BIGINT},
      </if>
      <if test="villageId != null" >
        village_id = #{villageId,jdbcType=BIGINT},
      </if>
      <if test="tinyVillageId != null" >
        tiny_village_id = #{tinyVillageId,jdbcType=BIGINT},
      </if>
      <if test="buildingId != null" >
        building_id = #{buildingId,jdbcType=BIGINT},
      </if>
      <if test="detailAddress != null" >
        detail_address = #{detailAddress,jdbcType=VARCHAR},
      </if>
      <if test="completeAddress != null" >
        complete_address = #{completeAddress,jdbcType=VARCHAR},
      </if>
      <if test="employeeId != null" >
        employee_id = #{employeeId,jdbcType=BIGINT},
      </if>
      <if test="employeePhone != null" >
        employee_phone = #{employeePhone,jdbcType=VARCHAR},
      </if>
      <if test="employeeName != null" >
        employee_name = #{employeeName,jdbcType=VARCHAR},
      </if>
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=BIGINT},
      </if>
      <if test="eshopId != null" >
        eshop_id = #{eshopId,jdbcType=BIGINT},
      </if>
      <if test="eshopName != null" >
        eshop_name = #{eshopName,jdbcType=VARCHAR},
      </if>
      <if test="receiptsId != null" >
        receipts_id = #{receiptsId,jdbcType=BIGINT},
      </if>
      <if test="evaluationStatus != null" >
        evaluation_status = #{evaluationStatus,jdbcType=INTEGER},
      </if>
      <if test="appointmentStartTime != null" >
        appointment_start_time = #{appointmentStartTime,jdbcType=TIMESTAMP},
      </if>
      <if test="appointmentEndTime != null" >
        appointment_end_time = #{appointmentEndTime,jdbcType=TIMESTAMP},
      </if>
      <if test="orderStatus != null" >
        order_status = #{orderStatus,jdbcType=INTEGER},
      </if>
      <if test="orderSource != null" >
        order_source = #{orderSource,jdbcType=INTEGER},
      </if>
      <if test="invoiceStatus != null" >
        invoice_status = #{invoiceStatus,jdbcType=INTEGER},
      </if>
      <if test="sellerRemark != null" >
        seller_remark = #{sellerRemark,jdbcType=VARCHAR},
      </if>
      <if test="buyerRemark != null" >
        buyer_remark = #{buyerRemark,jdbcType=VARCHAR},
      </if>
      <if test="employeeRemark != null" >
        employee_remark = #{employeeRemark,jdbcType=VARCHAR},
      </if>
      <if test="payment != null" >
        payment = #{payment,jdbcType=INTEGER},
      </if>
      <if test="payStatus != null" >
        pay_status = #{payStatus,jdbcType=INTEGER},
      </if>
      <if test="payPlatform != null" >
        pay_platform = #{payPlatform,jdbcType=INTEGER},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=TIMESTAMP},
      </if>
      <if test="tradingPrice != null" >
        trading_price = #{tradingPrice,jdbcType=DECIMAL},
      </if>
      <if test="freight != null" >
        freight = #{freight,jdbcType=DECIMAL},
      </if>
      <if test="couponId != null" >
        coupon_id = #{couponId,jdbcType=BIGINT},
      </if>
      <if test="payablePrice != null" >
        payable_price = #{payablePrice,jdbcType=DECIMAL},
      </if>
      <if test="abnormalStatus != null" >
        abnormal_status = #{abnormalStatus,jdbcType=INTEGER},
      </if>
      <if test="deliveryType != null" >
        delivery_type = #{deliveryType,jdbcType=INTEGER},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="createUserId != null" >
        create_user_id = #{createUserId,jdbcType=BIGINT},
      </if>
      <if test="updateUserId != null" >
        update_user_id = #{updateUserId,jdbcType=BIGINT},
      </if>
      <if test="totalWeight != null" >
        total_weight = #{totalWeight,jdbcType=DOUBLE},
      </if>
      <if test="totalQuantity != null" >
        total_quantity = #{totalQuantity,jdbcType=INTEGER},
      </if>
      <if test="receiveOrSend != null" >
        receive_or_send = #{receiveOrSend,jdbcType=INTEGER},
      </if>
      <if test="clothesAmount != null" >
        clothes_amount = #{clothesAmount,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gatz.discovery.modules.cidm.model.TOrder" >
    update t_order
    set order_sn = #{orderSn,jdbcType=VARCHAR},
      group_id = #{groupId,jdbcType=VARCHAR},
      order_type = #{orderType,jdbcType=INTEGER},
      customer_id = #{customerId,jdbcType=BIGINT},
      consignee = #{consignee,jdbcType=VARCHAR},
      consignee_phone = #{consigneePhone,jdbcType=VARCHAR},
      province_id = #{provinceId,jdbcType=BIGINT},
      city_id = #{cityId,jdbcType=BIGINT},
      county_id = #{countyId,jdbcType=BIGINT},
      town_id = #{townId,jdbcType=BIGINT},
      village_id = #{villageId,jdbcType=BIGINT},
      tiny_village_id = #{tinyVillageId,jdbcType=BIGINT},
      building_id = #{buildingId,jdbcType=BIGINT},
      detail_address = #{detailAddress,jdbcType=VARCHAR},
      complete_address = #{completeAddress,jdbcType=VARCHAR},
      employee_id = #{employeeId,jdbcType=BIGINT},
      employee_phone = #{employeePhone,jdbcType=VARCHAR},
      employee_name = #{employeeName,jdbcType=VARCHAR},
      store_id = #{storeId,jdbcType=BIGINT},
      eshop_id = #{eshopId,jdbcType=BIGINT},
      eshop_name = #{eshopName,jdbcType=VARCHAR},
      receipts_id = #{receiptsId,jdbcType=BIGINT},
      evaluation_status = #{evaluationStatus,jdbcType=INTEGER},
      appointment_start_time = #{appointmentStartTime,jdbcType=TIMESTAMP},
      appointment_end_time = #{appointmentEndTime,jdbcType=TIMESTAMP},
      order_status = #{orderStatus,jdbcType=INTEGER},
      order_source = #{orderSource,jdbcType=INTEGER},
      invoice_status = #{invoiceStatus,jdbcType=INTEGER},
      seller_remark = #{sellerRemark,jdbcType=VARCHAR},
      buyer_remark = #{buyerRemark,jdbcType=VARCHAR},
      employee_remark = #{employeeRemark,jdbcType=VARCHAR},
      payment = #{payment,jdbcType=INTEGER},
      pay_status = #{payStatus,jdbcType=INTEGER},
      pay_platform = #{payPlatform,jdbcType=INTEGER},
      pay_time = #{payTime,jdbcType=TIMESTAMP},
      trading_price = #{tradingPrice,jdbcType=DECIMAL},
      freight = #{freight,jdbcType=DECIMAL},
      coupon_id = #{couponId,jdbcType=BIGINT},
      payable_price = #{payablePrice,jdbcType=DECIMAL},
      abnormal_status = #{abnormalStatus,jdbcType=INTEGER},
      delivery_type = #{deliveryType,jdbcType=INTEGER},
      status = #{status,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      create_user_id = #{createUserId,jdbcType=BIGINT},
      update_user_id = #{updateUserId,jdbcType=BIGINT},
      total_weight = #{totalWeight,jdbcType=DOUBLE},
      total_quantity = #{totalQuantity,jdbcType=INTEGER},
      receive_or_send = #{receiveOrSend,jdbcType=INTEGER},
      clothes_amount = #{clothesAmount,jdbcType=INTEGER}
    where id = #{id,jdbcType=BIGINT}
  </update>
  
  <select id="selectSumOrder" parameterType="java.lang.String" resultType="java.util.HashMap">
  SELECT count(*) as orderSum,sum(t.trading_price) as sumPrice,count( DISTINCT t.customer_id) as sumCustomer from 
  t_order t 
  WHERE t.`status`=0 and t.order_status in(60,70,80) 
  <if test="provinceId != null and provinceId !=''">
   and t.province_id=#{provinceId}
  </if>
   <if test="cityId != null and cityId !=''">
   and t.city_id=#{cityId}
  </if>
   <if test="countyId != null and countyId !=''">
   and t.county_id=#{countyId}
  </if>
   <if test="townId != null and townId !=''">
   and t.town_id=#{townId}
  </if>
   <if test="villageId != null and villageId !=''">
   and t.village_id=#{villageId}
  </if>
   <if test="tinyVillageId != null and tinyVillageId !=''">
   and t.tiny_village_id=#{tinyVillageId}
  </if>
   <if test="buildingId != null and buildingId !=''">
   and t.building_id=#{buildingId}
  </if>
  and left(t.create_time,4) = DATE_FORMAT( current_timestamp(),'%Y' )  ;
  </select>
  
  
  <select id="selectContrastOrder" parameterType="java.lang.String" resultType="java.util.HashMap">
 SELECT t1.orderSum as orderSum1,t1.sumPrice as sumPrice1,t1.sumCustomer as sumCustomer1,t2.orderSum as orderSum2,t2.sumPrice as sumPrice2,t2.sumCustomer as sumCustomer2 FROM( SELECT count(*) as orderSum,sum(t.trading_price) as sumPrice,count( DISTINCT t.customer_id) as sumCustomer from 
  t_order t 
  WHERE t.`status`=0 and t.order_status in(60,70,80) 
  <if test="provinceId != null and provinceId !=''">
   and t.province_id=#{provinceId}
  </if>
   <if test="cityId != null and cityId !=''">
   and t.city_id=#{cityId}
  </if>
   <if test="countyId != null and countyId !=''">
   and t.county_id=#{countyId}
  </if>
   <if test="townId != null and townId !=''">
   and t.town_id=#{townId}
  </if>
   <if test="villageId != null and villageId !=''">
   and t.village_id=#{villageId}
  </if>
   <if test="tinyVillageId != null and tinyVillageId !=''">
   and t.tiny_village_id=#{tinyVillageId}
  </if>
   <if test="buildingId != null and buildingId !=''">
   and t.building_id=#{buildingId}
  </if>
   and left(t.create_time,7) BETWEEN DATE_FORMAT( current_timestamp(),'%Y-%01' ) and DATE_FORMAT( current_timestamp(),'%Y-%m' )) t1 ,


 (SELECT count(*) as orderSum,sum(t.trading_price) as sumPrice,count( DISTINCT t.customer_id) as sumCustomer from 
  t_order t 
  WHERE t.`status`=0 and t.order_status in(60,70,80) 
  <if test="provinceId != null and provinceId !=''">
   and t.province_id=#{provinceId}
  </if>
   <if test="cityId != null and cityId !=''">
   and t.city_id=#{cityId}
  </if>
   <if test="countyId != null and countyId !=''">
   and t.county_id=#{countyId}
  </if>
   <if test="townId != null and townId !=''">
   and t.town_id=#{townId}
  </if>
   <if test="villageId != null and villageId !=''">
   and t.village_id=#{villageId}
  </if>
   <if test="tinyVillageId != null and tinyVillageId !=''">
   and t.tiny_village_id=#{tinyVillageId}
  </if>
   <if test="buildingId != null and buildingId !=''">
   and t.building_id=#{buildingId}
  </if>
   and left(t.create_time,7) BETWEEN DATE_FORMAT( current_timestamp(),'%Y-%01' ) and date_format(date_sub(curdate(), interval 1 month),'%Y-%m'))t2;
  </select>
  
 
 <select id="selectContrastCustomer" resultType="java.util.HashMap" parameterType="java.util.HashMap">
 SELECT t1.sumCustomer as sumCustomer1,t2.sumCustomer as sumCustomer2 FROM
( SELECT count(*) as sumCustomer from 
  t_customer t 
  WHERE 1=1 and t.status=0 and customer_type = 10 AND t.province_id IS NOT NULL AND t.city_id IS NOT NULL AND t.county_id IS NOT NULL 
AND t.town_id IS NOT NULL AND t.village_id IS NOT NULL
 <if test="areaType =='1'.toString() and id != null and id != ''">
		and t.province_id = #{id,jdbcType=VARCHAR}  
	</if>
	<if test="areaType =='2'.toString() and id != null and id != ''">
		and t.city_id = #{id,jdbcType=VARCHAR}
	</if>
	<if test="areaType =='3'.toString() and id != null and id != ''">
		and t.county_id = #{id,jdbcType=VARCHAR}
	</if>
	<if test="areaType =='4'.toString() and id != null and id != ''">
		and t.town_id = #{id,jdbcType=VARCHAR}
	</if>
	<if test="areaType =='5'.toString() and id != null and id != ''">
		and t.village_id = #{id,jdbcType=VARCHAR}
	</if>
	
	<if test="areaType =='6'.toString() and id != null and id != ''">
		and t.town_id = #{id,jdbcType=VARCHAR}
	</if>
	<if test="areaType =='7'.toString() and id != null and id != ''">
		and t.village_id = #{id,jdbcType=VARCHAR}
	</if>
   and left(t.create_time,7) BETWEEN DATE_FORMAT( current_timestamp(),'%Y-%01' ) and DATE_FORMAT( current_timestamp(),'%Y-%m' )) t1 ,


 (SELECT count(*) as sumCustomer from 
  t_customer t 
  WHERE 1=1 and t.status=0 and customer_type = 10 AND t.province_id IS NOT NULL AND t.city_id IS NOT NULL AND t.county_id IS NOT NULL 
AND t.town_id IS NOT NULL AND t.village_id IS NOT NULL
 <if test="areaType =='1'.toString() and id != null and id != ''">
		and t.province_id = #{id,jdbcType=VARCHAR}  
	</if>
	<if test="areaType =='2'.toString() and id != null and id != ''">
		and t.city_id = #{id,jdbcType=VARCHAR}
	</if>
	<if test="areaType =='3'.toString() and id != null and id != ''">
		and t.county_id = #{id,jdbcType=VARCHAR}
	</if>
	<if test="areaType =='4'.toString() and id != null and id != ''">
		and t.town_id = #{id,jdbcType=VARCHAR}
	</if>
	<if test="areaType =='5'.toString() and id != null and id != ''">
		and t.village_id = #{id,jdbcType=VARCHAR}
	</if>
	
	<if test="areaType =='6'.toString() and id != null and id != ''">
		and t.town_id = #{id,jdbcType=VARCHAR}
	</if>
	<if test="areaType =='7'.toString() and id != null and id != ''">
		and t.village_id = #{id,jdbcType=VARCHAR}
	</if>
   and left(t.create_time,7) BETWEEN DATE_FORMAT( current_timestamp(),'%Y-%01' ) and date_format(date_sub(curdate(), interval 1 month),'%Y-%m'))t2;
 </select> 
 
 <select id="selectContrastPrice" resultType="java.util.HashMap" parameterType="java.util.HashMap">
 SELECT t1.sumPrice as sumPrice1,t2.sumPrice as sumPrice2 FROM
( SELECT SUM(t.trading_price) sumPrice from 
  t_sum_ord_5grd t 
  WHERE 1=1 and t.status=0
 	<if test="id != null and id != ''">
		and t.area_id =  #{id,jdbcType=VARCHAR}
	</if>
	<if test="areaType != null and areaType != ''">
		and t.area_type = #{areaType,jdbcType=VARCHAR}
	</if>
   and left(t.create_time,7) BETWEEN DATE_FORMAT( current_timestamp(),'%Y-%01' ) and DATE_FORMAT( current_timestamp(),'%Y-%m' )) t1 ,


 (SELECT SUM(t.trading_price) sumPrice from 
  t_sum_ord_5grd t 
  WHERE 1=1 and t.status=0
 	<if test="id != null and id != ''">
		and t.area_id =  #{id,jdbcType=VARCHAR}
	</if>
	<if test="areaType != null and areaType != ''">
		and t.area_type = #{areaType,jdbcType=VARCHAR}
	</if>
   and left(t.create_time,7) BETWEEN DATE_FORMAT( current_timestamp(),'%Y-%01' ) and date_format(date_sub(curdate(), interval 1 month),'%Y-%m'))t2;
 </select>
</mapper>