<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gatz.discovery.modules.cidm.dao.TStoreMapper" >
  <resultMap id="BaseResultMap" type="com.gatz.discovery.modules.cidm.model.TStore" >
    <id column="store_id" property="storeId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="type" property="type" jdbcType="INTEGER" />
    <result column="house_id" property="houseId" jdbcType="BIGINT" />
    <result column="building_id" property="buildingId" jdbcType="BIGINT" />
    <result column="tinyvillage_Id" property="tinyvillageId" jdbcType="BIGINT" />
    <result column="village_id" property="villageId" jdbcType="BIGINT" />
    <result column="town_id" property="townId" jdbcType="BIGINT" />
    <result column="county_id" property="countyId" jdbcType="BIGINT" />
    <result column="city_id" property="cityId" jdbcType="BIGINT" />
    <result column="province_id" property="provinceId" jdbcType="BIGINT" />
    <result column="coordinate_x" property="coordinateX" jdbcType="REAL" />
    <result column="coordinate_y" property="coordinateY" jdbcType="REAL" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="open_time" property="openTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    store_id, name, type, house_id, building_id, tinyvillage_Id, village_id, town_id, 
    county_id, city_id, province_id, coordinate_x, coordinate_y, status, version, create_user, 
    create_time, update_user, update_time, open_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gatz.discovery.modules.cidm.model.TStoreExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_store
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_store
    where store_id = #{storeId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_store
    where store_id = #{storeId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gatz.discovery.modules.cidm.model.TStoreExample" >
    delete from t_store
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gatz.discovery.modules.cidm.model.TStore" >
    insert into t_store (store_id, name, type, 
      house_id, building_id, tinyvillage_Id, 
      village_id, town_id, county_id, 
      city_id, province_id, coordinate_x, 
      coordinate_y, status, version, 
      create_user, create_time, update_user, 
      update_time, open_time)
    values (#{storeId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{type,jdbcType=INTEGER}, 
      #{houseId,jdbcType=BIGINT}, #{buildingId,jdbcType=BIGINT}, #{tinyvillageId,jdbcType=BIGINT}, 
      #{villageId,jdbcType=BIGINT}, #{townId,jdbcType=BIGINT}, #{countyId,jdbcType=BIGINT}, 
      #{cityId,jdbcType=BIGINT}, #{provinceId,jdbcType=BIGINT}, #{coordinateX,jdbcType=REAL}, 
      #{coordinateY,jdbcType=REAL}, #{status,jdbcType=INTEGER}, #{version,jdbcType=INTEGER}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP}, #{openTime, jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.gatz.discovery.modules.cidm.model.TStore" >
    insert into t_store
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="type != null" >
        type,
      </if>
      <if test="houseId != null" >
        house_id,
      </if>
      <if test="buildingId != null" >
        building_id,
      </if>
      <if test="tinyvillageId != null" >
        tinyvillage_Id,
      </if>
      <if test="villageId != null" >
        village_id,
      </if>
      <if test="townId != null" >
        town_id,
      </if>
      <if test="countyId != null" >
        county_id,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
      <if test="provinceId != null" >
        province_id,
      </if>
      <if test="coordinateX != null" >
        coordinate_x,
      </if>
      <if test="coordinateY != null" >
        coordinate_y,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
       <if test="openTime != null" >
        open_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="storeId != null" >
        #{storeId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        #{type,jdbcType=INTEGER},
      </if>
      <if test="houseId != null" >
        #{houseId,jdbcType=BIGINT},
      </if>
      <if test="buildingId != null" >
        #{buildingId,jdbcType=BIGINT},
      </if>
      <if test="tinyvillageId != null" >
        #{tinyvillageId,jdbcType=BIGINT},
      </if>
      <if test="villageId != null" >
        #{villageId,jdbcType=BIGINT},
      </if>
      <if test="townId != null" >
        #{townId,jdbcType=BIGINT},
      </if>
      <if test="countyId != null" >
        #{countyId,jdbcType=BIGINT},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=BIGINT},
      </if>
      <if test="provinceId != null" >
        #{provinceId,jdbcType=BIGINT},
      </if>
      <if test="coordinateX != null" >
        #{coordinateX,jdbcType=REAL},
      </if>
      <if test="coordinateY != null" >
        #{coordinateY,jdbcType=REAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="openTime != null" >
        #{openTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gatz.discovery.modules.cidm.model.TStoreExample" resultType="java.lang.Integer" >
    select count(*) from t_store
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_store
    <set >
      <if test="record.storeId != null" >
        store_id = #{record.storeId,jdbcType=BIGINT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.type != null" >
        type = #{record.type,jdbcType=INTEGER},
      </if>
      <if test="record.houseId != null" >
        house_id = #{record.houseId,jdbcType=BIGINT},
      </if>
      <if test="record.buildingId != null" >
        building_id = #{record.buildingId,jdbcType=BIGINT},
      </if>
      <if test="record.tinyvillageId != null" >
        tinyvillage_Id = #{record.tinyvillageId,jdbcType=BIGINT},
      </if>
      <if test="record.villageId != null" >
        village_id = #{record.villageId,jdbcType=BIGINT},
      </if>
      <if test="record.townId != null" >
        town_id = #{record.townId,jdbcType=BIGINT},
      </if>
      <if test="record.countyId != null" >
        county_id = #{record.countyId,jdbcType=BIGINT},
      </if>
      <if test="record.cityId != null" >
        city_id = #{record.cityId,jdbcType=BIGINT},
      </if>
      <if test="record.provinceId != null" >
        province_id = #{record.provinceId,jdbcType=BIGINT},
      </if>
      <if test="record.coordinateX != null" >
        coordinate_x = #{record.coordinateX,jdbcType=REAL},
      </if>
      <if test="record.coordinateY != null" >
        coordinate_y = #{record.coordinateY,jdbcType=REAL},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
       <if test="record.openTime != null" >
        open_time = #{record.openTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_store
    set store_id = #{record.storeId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      type = #{record.type,jdbcType=INTEGER},
      house_id = #{record.houseId,jdbcType=BIGINT},
      building_id = #{record.buildingId,jdbcType=BIGINT},
      tinyvillage_Id = #{record.tinyvillageId,jdbcType=BIGINT},
      village_id = #{record.villageId,jdbcType=BIGINT},
      town_id = #{record.townId,jdbcType=BIGINT},
      county_id = #{record.countyId,jdbcType=BIGINT},
      city_id = #{record.cityId,jdbcType=BIGINT},
      province_id = #{record.provinceId,jdbcType=BIGINT},
      coordinate_x = #{record.coordinateX,jdbcType=REAL},
      coordinate_y = #{record.coordinateY,jdbcType=REAL},
      status = #{record.status,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      open_time = #{record.openTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gatz.discovery.modules.cidm.model.TStore" >
    update t_store
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="type != null" >
        type = #{type,jdbcType=INTEGER},
      </if>
      <if test="houseId != null" >
        house_id = #{houseId,jdbcType=BIGINT},
      </if>
      <if test="buildingId != null" >
        building_id = #{buildingId,jdbcType=BIGINT},
      </if>
      <if test="tinyvillageId != null" >
        tinyvillage_Id = #{tinyvillageId,jdbcType=BIGINT},
      </if>
      <if test="villageId != null" >
        village_id = #{villageId,jdbcType=BIGINT},
      </if>
      <if test="townId != null" >
        town_id = #{townId,jdbcType=BIGINT},
      </if>
      <if test="countyId != null" >
        county_id = #{countyId,jdbcType=BIGINT},
      </if>
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=BIGINT},
      </if>
      <if test="provinceId != null" >
        province_id = #{provinceId,jdbcType=BIGINT},
      </if>
      <if test="coordinateX != null" >
        coordinate_x = #{coordinateX,jdbcType=REAL},
      </if>
      <if test="coordinateY != null" >
        coordinate_y = #{coordinateY,jdbcType=REAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null" >
        open_time = #{openTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where store_id = #{storeId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gatz.discovery.modules.cidm.model.TStore" >
    update t_store
    set name = #{name,jdbcType=VARCHAR},
      type = #{type,jdbcType=INTEGER},
      house_id = #{houseId,jdbcType=BIGINT},
      building_id = #{buildingId,jdbcType=BIGINT},
      tinyvillage_Id = #{tinyvillageId,jdbcType=BIGINT},
      village_id = #{villageId,jdbcType=BIGINT},
      town_id = #{townId,jdbcType=BIGINT},
      county_id = #{countyId,jdbcType=BIGINT},
      city_id = #{cityId,jdbcType=BIGINT},
      province_id = #{provinceId,jdbcType=BIGINT},
      coordinate_x = #{coordinateX,jdbcType=REAL},
      coordinate_y = #{coordinateY,jdbcType=REAL},
      status = #{status,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      open_time = #{openTime,jdbcType=TIMESTAMP}
    where store_id = #{storeId,jdbcType=BIGINT}
  </update>
</mapper>