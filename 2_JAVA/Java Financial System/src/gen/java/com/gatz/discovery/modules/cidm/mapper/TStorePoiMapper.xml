<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gatz.discovery.modules.cidm.dao.TStorePoiMapper" >
  <resultMap id="BaseResultMap" type="com.gatz.discovery.modules.cidm.model.TStorePoi" >
    <id column="store_poi_id" property="storePoiId" jdbcType="BIGINT" />
    <result column="store_id" property="storeId" jdbcType="BIGINT" />
    <result column="city_id" property="cityId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="region" property="region" jdbcType="VARCHAR" />
    <result column="openstaus_flag" property="openstausFlag" jdbcType="BIGINT" />
    <result column="opentatus" property="opentatus" jdbcType="VARCHAR" />
    <result column="option_flag" property="optionFlag" jdbcType="BIGINT" />
    <result column="option" property="option" jdbcType="VARCHAR" />
    <result column="opentime" property="opentime" jdbcType="TIMESTAMP" />
    <result column="supervisor" property="supervisor" jdbcType="VARCHAR" />
    <result column="sv_telno" property="svTelno" jdbcType="BIGINT" />
    <result column="manager" property="manager" jdbcType="VARCHAR" />
    <result column="mg_telno" property="mgTelno" jdbcType="BIGINT" />
    <result column="address" property="address" jdbcType="VARCHAR" />
    <result column="coordinate_x" property="coordinateX" jdbcType="REAL" />
    <result column="coordinate_y" property="coordinateY" jdbcType="REAL" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
    <result column="filler01" property="filler01" jdbcType="VARCHAR" />
    <result column="filler02" property="filler02" jdbcType="VARCHAR" />
    <result column="filler03" property="filler03" jdbcType="VARCHAR" />
    <result column="filler04" property="filler04" jdbcType="VARCHAR" />
    <result column="filler05" property="filler05" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    store_poi_id, store_id, city_id, name, region, openstaus_flag, opentatus, option_flag, 
    option, opentime, supervisor, sv_telno, manager, mg_telno, address, coordinate_x, 
    coordinate_y, create_user, create_time, update_user, update_time, filler01, filler02, 
    filler03, filler04, filler05
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gatz.discovery.modules.cidm.model.TStorePoiExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_store_poi
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_store_poi
    where store_poi_id = #{storePoiId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_store_poi
    where store_poi_id = #{storePoiId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gatz.discovery.modules.cidm.model.TStorePoiExample" >
    delete from t_store_poi
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gatz.discovery.modules.cidm.model.TStorePoi" >
    insert into t_store_poi (store_poi_id, store_id, city_id, 
      name, region, openstaus_flag, 
      opentatus, option_flag, option, 
      opentime, supervisor, sv_telno, 
      manager, mg_telno, address, 
      coordinate_x, coordinate_y, create_user, 
      create_time, update_user, update_time, 
      filler01, filler02, filler03, 
      filler04, filler05)
    values (#{storePoiId,jdbcType=BIGINT}, #{storeId,jdbcType=BIGINT}, #{cityId,jdbcType=BIGINT}, 
      #{name,jdbcType=VARCHAR}, #{region,jdbcType=VARCHAR}, #{openstausFlag,jdbcType=BIGINT}, 
      #{opentatus,jdbcType=VARCHAR}, #{optionFlag,jdbcType=BIGINT}, #{option,jdbcType=VARCHAR}, 
      #{opentime,jdbcType=TIMESTAMP}, #{supervisor,jdbcType=VARCHAR}, #{svTelno,jdbcType=BIGINT}, 
      #{manager,jdbcType=VARCHAR}, #{mgTelno,jdbcType=BIGINT}, #{address,jdbcType=VARCHAR}, 
      #{coordinateX,jdbcType=REAL}, #{coordinateY,jdbcType=REAL}, #{createUser,jdbcType=VARCHAR}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{filler01,jdbcType=VARCHAR}, #{filler02,jdbcType=VARCHAR}, #{filler03,jdbcType=VARCHAR}, 
      #{filler04,jdbcType=VARCHAR}, #{filler05,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.gatz.discovery.modules.cidm.model.TStorePoi" >
    insert into t_store_poi
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="storePoiId != null" >
        store_poi_id,
      </if>
      <if test="storeId != null" >
        store_id,
      </if>
      <if test="cityId != null" >
        city_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="region != null" >
        region,
      </if>
      <if test="openstausFlag != null" >
        openstaus_flag,
      </if>
      <if test="opentatus != null" >
        opentatus,
      </if>
      <if test="optionFlag != null" >
        option_flag,
      </if>
      <if test="option != null" >
        option,
      </if>
      <if test="opentime != null" >
        opentime,
      </if>
      <if test="supervisor != null" >
        supervisor,
      </if>
      <if test="svTelno != null" >
        sv_telno,
      </if>
      <if test="manager != null" >
        manager,
      </if>
      <if test="mgTelno != null" >
        mg_telno,
      </if>
      <if test="address != null" >
        address,
      </if>
      <if test="coordinateX != null" >
        coordinate_x,
      </if>
      <if test="coordinateY != null" >
        coordinate_y,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="filler01 != null" >
        filler01,
      </if>
      <if test="filler02 != null" >
        filler02,
      </if>
      <if test="filler03 != null" >
        filler03,
      </if>
      <if test="filler04 != null" >
        filler04,
      </if>
      <if test="filler05 != null" >
        filler05,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="storePoiId != null" >
        #{storePoiId,jdbcType=BIGINT},
      </if>
      <if test="storeId != null" >
        #{storeId,jdbcType=BIGINT},
      </if>
      <if test="cityId != null" >
        #{cityId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="openstausFlag != null" >
        #{openstausFlag,jdbcType=BIGINT},
      </if>
      <if test="opentatus != null" >
        #{opentatus,jdbcType=VARCHAR},
      </if>
      <if test="optionFlag != null" >
        #{optionFlag,jdbcType=BIGINT},
      </if>
      <if test="option != null" >
        #{option,jdbcType=VARCHAR},
      </if>
      <if test="opentime != null" >
        #{opentime,jdbcType=TIMESTAMP},
      </if>
      <if test="supervisor != null" >
        #{supervisor,jdbcType=VARCHAR},
      </if>
      <if test="svTelno != null" >
        #{svTelno,jdbcType=BIGINT},
      </if>
      <if test="manager != null" >
        #{manager,jdbcType=VARCHAR},
      </if>
      <if test="mgTelno != null" >
        #{mgTelno,jdbcType=BIGINT},
      </if>
      <if test="address != null" >
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="coordinateX != null" >
        #{coordinateX,jdbcType=REAL},
      </if>
      <if test="coordinateY != null" >
        #{coordinateY,jdbcType=REAL},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="filler01 != null" >
        #{filler01,jdbcType=VARCHAR},
      </if>
      <if test="filler02 != null" >
        #{filler02,jdbcType=VARCHAR},
      </if>
      <if test="filler03 != null" >
        #{filler03,jdbcType=VARCHAR},
      </if>
      <if test="filler04 != null" >
        #{filler04,jdbcType=VARCHAR},
      </if>
      <if test="filler05 != null" >
        #{filler05,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gatz.discovery.modules.cidm.model.TStorePoiExample" resultType="java.lang.Integer" >
    select count(*) from t_store_poi
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_store_poi
    <set >
      <if test="record.storePoiId != null" >
        store_poi_id = #{record.storePoiId,jdbcType=BIGINT},
      </if>
      <if test="record.storeId != null" >
        store_id = #{record.storeId,jdbcType=BIGINT},
      </if>
      <if test="record.cityId != null" >
        city_id = #{record.cityId,jdbcType=BIGINT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.region != null" >
        region = #{record.region,jdbcType=VARCHAR},
      </if>
      <if test="record.openstausFlag != null" >
        openstaus_flag = #{record.openstausFlag,jdbcType=BIGINT},
      </if>
      <if test="record.opentatus != null" >
        opentatus = #{record.opentatus,jdbcType=VARCHAR},
      </if>
      <if test="record.optionFlag != null" >
        option_flag = #{record.optionFlag,jdbcType=BIGINT},
      </if>
      <if test="record.option != null" >
        option = #{record.option,jdbcType=VARCHAR},
      </if>
      <if test="record.opentime != null" >
        opentime = #{record.opentime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.supervisor != null" >
        supervisor = #{record.supervisor,jdbcType=VARCHAR},
      </if>
      <if test="record.svTelno != null" >
        sv_telno = #{record.svTelno,jdbcType=BIGINT},
      </if>
      <if test="record.manager != null" >
        manager = #{record.manager,jdbcType=VARCHAR},
      </if>
      <if test="record.mgTelno != null" >
        mg_telno = #{record.mgTelno,jdbcType=BIGINT},
      </if>
      <if test="record.address != null" >
        address = #{record.address,jdbcType=VARCHAR},
      </if>
      <if test="record.coordinateX != null" >
        coordinate_x = #{record.coordinateX,jdbcType=REAL},
      </if>
      <if test="record.coordinateY != null" >
        coordinate_y = #{record.coordinateY,jdbcType=REAL},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.filler01 != null" >
        filler01 = #{record.filler01,jdbcType=VARCHAR},
      </if>
      <if test="record.filler02 != null" >
        filler02 = #{record.filler02,jdbcType=VARCHAR},
      </if>
      <if test="record.filler03 != null" >
        filler03 = #{record.filler03,jdbcType=VARCHAR},
      </if>
      <if test="record.filler04 != null" >
        filler04 = #{record.filler04,jdbcType=VARCHAR},
      </if>
      <if test="record.filler05 != null" >
        filler05 = #{record.filler05,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_store_poi
    set store_poi_id = #{record.storePoiId,jdbcType=BIGINT},
      store_id = #{record.storeId,jdbcType=BIGINT},
      city_id = #{record.cityId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      region = #{record.region,jdbcType=VARCHAR},
      openstaus_flag = #{record.openstausFlag,jdbcType=BIGINT},
      opentatus = #{record.opentatus,jdbcType=VARCHAR},
      option_flag = #{record.optionFlag,jdbcType=BIGINT},
      option = #{record.option,jdbcType=VARCHAR},
      opentime = #{record.opentime,jdbcType=TIMESTAMP},
      supervisor = #{record.supervisor,jdbcType=VARCHAR},
      sv_telno = #{record.svTelno,jdbcType=BIGINT},
      manager = #{record.manager,jdbcType=VARCHAR},
      mg_telno = #{record.mgTelno,jdbcType=BIGINT},
      address = #{record.address,jdbcType=VARCHAR},
      coordinate_x = #{record.coordinateX,jdbcType=REAL},
      coordinate_y = #{record.coordinateY,jdbcType=REAL},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      filler01 = #{record.filler01,jdbcType=VARCHAR},
      filler02 = #{record.filler02,jdbcType=VARCHAR},
      filler03 = #{record.filler03,jdbcType=VARCHAR},
      filler04 = #{record.filler04,jdbcType=VARCHAR},
      filler05 = #{record.filler05,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gatz.discovery.modules.cidm.model.TStorePoi" >
    update t_store_poi
    <set >
      <if test="storeId != null" >
        store_id = #{storeId,jdbcType=BIGINT},
      </if>
      <if test="cityId != null" >
        city_id = #{cityId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="region != null" >
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="openstausFlag != null" >
        openstaus_flag = #{openstausFlag,jdbcType=BIGINT},
      </if>
      <if test="opentatus != null" >
        opentatus = #{opentatus,jdbcType=VARCHAR},
      </if>
      <if test="optionFlag != null" >
        option_flag = #{optionFlag,jdbcType=BIGINT},
      </if>
      <if test="option != null" >
        option = #{option,jdbcType=VARCHAR},
      </if>
      <if test="opentime != null" >
        opentime = #{opentime,jdbcType=TIMESTAMP},
      </if>
      <if test="supervisor != null" >
        supervisor = #{supervisor,jdbcType=VARCHAR},
      </if>
      <if test="svTelno != null" >
        sv_telno = #{svTelno,jdbcType=BIGINT},
      </if>
      <if test="manager != null" >
        manager = #{manager,jdbcType=VARCHAR},
      </if>
      <if test="mgTelno != null" >
        mg_telno = #{mgTelno,jdbcType=BIGINT},
      </if>
      <if test="address != null" >
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="coordinateX != null" >
        coordinate_x = #{coordinateX,jdbcType=REAL},
      </if>
      <if test="coordinateY != null" >
        coordinate_y = #{coordinateY,jdbcType=REAL},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="filler01 != null" >
        filler01 = #{filler01,jdbcType=VARCHAR},
      </if>
      <if test="filler02 != null" >
        filler02 = #{filler02,jdbcType=VARCHAR},
      </if>
      <if test="filler03 != null" >
        filler03 = #{filler03,jdbcType=VARCHAR},
      </if>
      <if test="filler04 != null" >
        filler04 = #{filler04,jdbcType=VARCHAR},
      </if>
      <if test="filler05 != null" >
        filler05 = #{filler05,jdbcType=VARCHAR},
      </if>
    </set>
    where store_poi_id = #{storePoiId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gatz.discovery.modules.cidm.model.TStorePoi" >
    update t_store_poi
    set store_id = #{storeId,jdbcType=BIGINT},
      city_id = #{cityId,jdbcType=BIGINT},
      name = #{name,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      openstaus_flag = #{openstausFlag,jdbcType=BIGINT},
      opentatus = #{opentatus,jdbcType=VARCHAR},
      option_flag = #{optionFlag,jdbcType=BIGINT},
      option = #{option,jdbcType=VARCHAR},
      opentime = #{opentime,jdbcType=TIMESTAMP},
      supervisor = #{supervisor,jdbcType=VARCHAR},
      sv_telno = #{svTelno,jdbcType=BIGINT},
      manager = #{manager,jdbcType=VARCHAR},
      mg_telno = #{mgTelno,jdbcType=BIGINT},
      address = #{address,jdbcType=VARCHAR},
      coordinate_x = #{coordinateX,jdbcType=REAL},
      coordinate_y = #{coordinateY,jdbcType=REAL},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      filler01 = #{filler01,jdbcType=VARCHAR},
      filler02 = #{filler02,jdbcType=VARCHAR},
      filler03 = #{filler03,jdbcType=VARCHAR},
      filler04 = #{filler04,jdbcType=VARCHAR},
      filler05 = #{filler05,jdbcType=VARCHAR}
    where store_poi_id = #{storePoiId,jdbcType=BIGINT}
  </update>
</mapper>