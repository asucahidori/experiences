<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.gatz.discovery.modules.cidm.dao.TBuildingMapper" >
  <resultMap id="BaseResultMap" type="com.gatz.discovery.modules.cidm.model.TBuilding" >
    <id column="building_id" property="buildingId" jdbcType="BIGINT" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="tinyvillage_id" property="tinyvillageId" jdbcType="BIGINT" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="buildup_area" property="buildupArea" jdbcType="BIGINT" />
    <result column="households" property="households" jdbcType="BIGINT" />
    <result column="ground_park_num" property="groundParkNum" jdbcType="BIGINT" />
    <result column="layer_park_num" property="layerParkNum" jdbcType="BIGINT" />
    <result column="coordinate_x" property="coordinateX" jdbcType="REAL" />
    <result column="coordinate_y" property="coordinateY" jdbcType="REAL" />
    <result column="status" property="status" jdbcType="INTEGER" />
    <result column="version" property="version" jdbcType="INTEGER" />
    <result column="create_user" property="createUser" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="TIMESTAMP" />
    <result column="update_user" property="updateUser" jdbcType="VARCHAR" />
    <result column="update_time" property="updateTime" jdbcType="TIMESTAMP" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    building_id, name, tinyvillage_id, description, buildup_area, households, ground_park_num, 
    layer_park_num, coordinate_x, coordinate_y, status, version, create_user, create_time, 
    update_user, update_time
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.gatz.discovery.modules.cidm.model.TBuildingExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_building
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    from t_building
    where building_id = #{buildingId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from t_building
    where building_id = #{buildingId,jdbcType=BIGINT}
  </delete>
  <delete id="deleteByExample" parameterType="com.gatz.discovery.modules.cidm.model.TBuildingExample" >
    delete from t_building
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.gatz.discovery.modules.cidm.model.TBuilding" >
    insert into t_building (building_id, name, tinyvillage_id, 
      description, buildup_area, households, 
      ground_park_num, layer_park_num, coordinate_x, 
      coordinate_y, status, version, 
      create_user, create_time, update_user, 
      update_time)
    values (#{buildingId,jdbcType=BIGINT}, #{name,jdbcType=VARCHAR}, #{tinyvillageId,jdbcType=BIGINT}, 
      #{description,jdbcType=VARCHAR}, #{buildupArea,jdbcType=BIGINT}, #{households,jdbcType=BIGINT}, 
      #{groundParkNum,jdbcType=BIGINT}, #{layerParkNum,jdbcType=BIGINT}, #{coordinateX,jdbcType=REAL}, 
      #{coordinateY,jdbcType=REAL}, #{status,jdbcType=INTEGER}, #{version,jdbcType=INTEGER}, 
      #{createUser,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, 
      #{updateTime,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="com.gatz.discovery.modules.cidm.model.TBuilding" >
    insert into t_building
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="buildingId != null" >
        building_id,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="tinyvillageId != null" >
        tinyvillage_id,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="buildupArea != null" >
        buildup_area,
      </if>
      <if test="households != null" >
        households,
      </if>
      <if test="groundParkNum != null" >
        ground_park_num,
      </if>
      <if test="layerParkNum != null" >
        layer_park_num,
      </if>
      <if test="coordinateX != null" >
        coordinate_x,
      </if>
      <if test="coordinateY != null" >
        coordinate_y,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="version != null" >
        version,
      </if>
      <if test="createUser != null" >
        create_user,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateUser != null" >
        update_user,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="buildingId != null" >
        #{buildingId,jdbcType=BIGINT},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="tinyvillageId != null" >
        #{tinyvillageId,jdbcType=BIGINT},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="buildupArea != null" >
        #{buildupArea,jdbcType=BIGINT},
      </if>
      <if test="households != null" >
        #{households,jdbcType=BIGINT},
      </if>
      <if test="groundParkNum != null" >
        #{groundParkNum,jdbcType=BIGINT},
      </if>
      <if test="layerParkNum != null" >
        #{layerParkNum,jdbcType=BIGINT},
      </if>
      <if test="coordinateX != null" >
        #{coordinateX,jdbcType=REAL},
      </if>
      <if test="coordinateY != null" >
        #{coordinateY,jdbcType=REAL},
      </if>
      <if test="status != null" >
        #{status,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        #{version,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.gatz.discovery.modules.cidm.model.TBuildingExample" resultType="java.lang.Integer" >
    select count(*) from t_building
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update t_building
    <set >
      <if test="record.buildingId != null" >
        building_id = #{record.buildingId,jdbcType=BIGINT},
      </if>
      <if test="record.name != null" >
        name = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.tinyvillageId != null" >
        tinyvillage_id = #{record.tinyvillageId,jdbcType=BIGINT},
      </if>
      <if test="record.description != null" >
        description = #{record.description,jdbcType=VARCHAR},
      </if>
      <if test="record.buildupArea != null" >
        buildup_area = #{record.buildupArea,jdbcType=BIGINT},
      </if>
      <if test="record.households != null" >
        households = #{record.households,jdbcType=BIGINT},
      </if>
      <if test="record.groundParkNum != null" >
        ground_park_num = #{record.groundParkNum,jdbcType=BIGINT},
      </if>
      <if test="record.layerParkNum != null" >
        layer_park_num = #{record.layerParkNum,jdbcType=BIGINT},
      </if>
      <if test="record.coordinateX != null" >
        coordinate_x = #{record.coordinateX,jdbcType=REAL},
      </if>
      <if test="record.coordinateY != null" >
        coordinate_y = #{record.coordinateY,jdbcType=REAL},
      </if>
      <if test="record.status != null" >
        status = #{record.status,jdbcType=INTEGER},
      </if>
      <if test="record.version != null" >
        version = #{record.version,jdbcType=INTEGER},
      </if>
      <if test="record.createUser != null" >
        create_user = #{record.createUser,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.updateUser != null" >
        update_user = #{record.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update t_building
    set building_id = #{record.buildingId,jdbcType=BIGINT},
      name = #{record.name,jdbcType=VARCHAR},
      tinyvillage_id = #{record.tinyvillageId,jdbcType=BIGINT},
      description = #{record.description,jdbcType=VARCHAR},
      buildup_area = #{record.buildupArea,jdbcType=BIGINT},
      households = #{record.households,jdbcType=BIGINT},
      ground_park_num = #{record.groundParkNum,jdbcType=BIGINT},
      layer_park_num = #{record.layerParkNum,jdbcType=BIGINT},
      coordinate_x = #{record.coordinateX,jdbcType=REAL},
      coordinate_y = #{record.coordinateY,jdbcType=REAL},
      status = #{record.status,jdbcType=INTEGER},
      version = #{record.version,jdbcType=INTEGER},
      create_user = #{record.createUser,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_user = #{record.updateUser,jdbcType=VARCHAR},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.gatz.discovery.modules.cidm.model.TBuilding" >
    update t_building
    <set >
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="tinyvillageId != null" >
        tinyvillage_id = #{tinyvillageId,jdbcType=BIGINT},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="buildupArea != null" >
        buildup_area = #{buildupArea,jdbcType=BIGINT},
      </if>
      <if test="households != null" >
        households = #{households,jdbcType=BIGINT},
      </if>
      <if test="groundParkNum != null" >
        ground_park_num = #{groundParkNum,jdbcType=BIGINT},
      </if>
      <if test="layerParkNum != null" >
        layer_park_num = #{layerParkNum,jdbcType=BIGINT},
      </if>
      <if test="coordinateX != null" >
        coordinate_x = #{coordinateX,jdbcType=REAL},
      </if>
      <if test="coordinateY != null" >
        coordinate_y = #{coordinateY,jdbcType=REAL},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="version != null" >
        version = #{version,jdbcType=INTEGER},
      </if>
      <if test="createUser != null" >
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null" >
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where building_id = #{buildingId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.gatz.discovery.modules.cidm.model.TBuilding" >
    update t_building
    set name = #{name,jdbcType=VARCHAR},
      tinyvillage_id = #{tinyvillageId,jdbcType=BIGINT},
      description = #{description,jdbcType=VARCHAR},
      buildup_area = #{buildupArea,jdbcType=BIGINT},
      households = #{households,jdbcType=BIGINT},
      ground_park_num = #{groundParkNum,jdbcType=BIGINT},
      layer_park_num = #{layerParkNum,jdbcType=BIGINT},
      coordinate_x = #{coordinateX,jdbcType=REAL},
      coordinate_y = #{coordinateY,jdbcType=REAL},
      status = #{status,jdbcType=INTEGER},
      version = #{version,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_time = #{updateTime,jdbcType=TIMESTAMP}
    where building_id = #{buildingId,jdbcType=BIGINT}
  </update>
</mapper>